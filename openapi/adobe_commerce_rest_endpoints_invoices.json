{
  "openapi": "3.0.0",
  "info": {
    "version": "2.4.8",
    "title": "Commerce Admin REST endpoints - Invoices Only",
    "description": "Invoice-related endpoints and schemas from Adobe Commerce REST API"
  },
  "tags": [
    {
      "name": "invoice/{invoiceId}/refund"
    },
    {
      "name": "invoices"
    },
    {
      "name": "invoices/"
    },
    {
      "name": "invoices/{id}"
    },
    {
      "name": "invoices/{id}/capture"
    },
    {
      "name": "invoices/{id}/comments"
    },
    {
      "name": "invoices/{id}/emails"
    },
    {
      "name": "invoices/{id}/void"
    },
    {
      "name": "invoices/comments"
    },
    {
      "name": "order/{orderId}/invoice"
    }
  ],
  "paths": {
    "/V1/invoice/{invoiceId}/refund": {
      "post": {
        "tags": [
          "invoice/{invoiceId}/refund"
        ],
        "description": "Create refund for invoice",
        "operationId": "PostV1InvoiceInvoiceIdRefund",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    }
                  },
                  "isOnline": {
                    "type": "boolean"
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-creditmemo-item-creation-interface"
                    }
                  },
                  "isOnline": {
                    "type": "boolean"
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-creditmemo-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoice/{invoiceId}/refund"
      }
    },
    "/V1/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "description": "Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each objectâ€™s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1Invoices",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices"
      }
    },
    "/V1/invoices/": {
      "post": {
        "tags": [
          "invoices/"
        ],
        "description": "Performs persist operations for a specified invoice.",
        "operationId": "PostV1Invoices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "entity"
                ],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "entity"
                ],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/"
      }
    },
    "/V1/invoices/comments": {
      "post": {
        "tags": [
          "invoices/comments"
        ],
        "description": "Performs persist operations for a specified invoice comment.",
        "operationId": "PostV1InvoicesComments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "entity"
                ],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "entity"
                ],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/comments"
      }
    },
    "/V1/invoices/{id}": {
      "get": {
        "tags": [
          "invoices/{id}"
        ],
        "description": "Loads a specified invoice.",
        "operationId": "GetV1InvoicesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}"
      }
    },
    "/V1/invoices/{id}/capture": {
      "post": {
        "tags": [
          "invoices/{id}/capture"
        ],
        "description": "Sets invoice capture.",
        "operationId": "PostV1InvoicesIdCapture",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/capture"
      }
    },
    "/V1/invoices/{id}/comments": {
      "get": {
        "tags": [
          "invoices/{id}/comments"
        ],
        "description": "Lists comments for a specified invoice.",
        "operationId": "GetV1InvoicesIdComments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/sales-data-invoice-comment-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/comments"
      }
    },
    "/V1/invoices/{id}/emails": {
      "post": {
        "tags": [
          "invoices/{id}/emails"
        ],
        "description": "Emails a user a specified invoice.",
        "operationId": "PostV1InvoicesIdEmails",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/emails"
      }
    },
    "/V1/invoices/{id}/void": {
      "post": {
        "tags": [
          "invoices/{id}/void"
        ],
        "description": "Voids a specified invoice.",
        "operationId": "PostV1InvoicesIdVoid",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The invoice ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "invoices/{id}/void"
      }
    },
    "/V1/order/{orderId}/invoice": {
      "post": {
        "tags": [
          "order/{orderId}/invoice"
        ],
        "description": "",
        "operationId": "PostV1OrderOrderIdInvoice",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "capture": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-invoice-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "properties": {
                  "capture": {
                    "type": "boolean"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/sales-data-invoice-item-creation-interface"
                    }
                  },
                  "notify": {
                    "type": "boolean"
                  },
                  "appendComment": {
                    "type": "boolean"
                  },
                  "comment": {
                    "$ref": "#/components/schemas/sales-data-invoice-comment-creation-interface"
                  },
                  "arguments": {
                    "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "order/{orderId}/invoice"
      }
    }
  },
  "components": {
    "requestBodies": {},
    "schemas": {
      "error-response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "$ref": "#/components/schemas/error-errors"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "parameters": {
            "$ref": "#/components/schemas/error-parameters"
          },
          "trace": {
            "type": "string",
            "description": "Stack trace"
          }
        },
        "required": [
          "message"
        ]
      },
      "sales-data-invoice-interface": {
        "type": "object",
        "description": "Invoice interface. An invoice is a record of the receipt of payment for an order.",
        "properties": {
          "base_currency_code": {
            "type": "string",
            "description": "Base currency code."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Base discount amount."
          },
          "base_grand_total": {
            "type": "number",
            "description": "Base grand total."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Base discount tax compensation amount."
          },
          "base_shipping_amount": {
            "type": "number",
            "description": "Base shipping amount."
          },
          "base_shipping_discount_tax_compensation_amnt": {
            "type": "number",
            "description": "Base shipping discount tax compensation amount."
          },
          "base_shipping_incl_tax": {
            "type": "number",
            "description": "Base shipping including tax."
          },
          "base_shipping_tax_amount": {
            "type": "number",
            "description": "Base shipping tax amount."
          },
          "base_subtotal": {
            "type": "number",
            "description": "Base subtotal."
          },
          "base_subtotal_incl_tax": {
            "type": "number",
            "description": "Base subtotal including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "base_total_refunded": {
            "type": "number",
            "description": "Base total refunded."
          },
          "base_to_global_rate": {
            "type": "number",
            "description": "Base-to-global rate."
          },
          "base_to_order_rate": {
            "type": "number",
            "description": "Base-to-order rate."
          },
          "billing_address_id": {
            "type": "integer",
            "description": "Billing address ID."
          },
          "can_void_flag": {
            "type": "integer",
            "description": "Can void flag value."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "discount_description": {
            "type": "string",
            "description": "Discount description."
          },
          "email_sent": {
            "type": "integer",
            "description": "Email-sent flag value."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice ID."
          },
          "global_currency_code": {
            "type": "string",
            "description": "Global currency code."
          },
          "grand_total": {
            "type": "number",
            "description": "Grand total."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "increment_id": {
            "type": "string",
            "description": "Increment ID."
          },
          "is_used_for_refund": {
            "type": "integer",
            "description": "Is-used-for-refund flag value."
          },
          "order_currency_code": {
            "type": "string",
            "description": "Order currency code."
          },
          "order_id": {
            "type": "integer",
            "description": "Order ID."
          },
          "shipping_address_id": {
            "type": "integer",
            "description": "Shipping address ID."
          },
          "shipping_amount": {
            "type": "number",
            "description": "Shipping amount."
          },
          "shipping_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Shipping discount tax compensation amount."
          },
          "shipping_incl_tax": {
            "type": "number",
            "description": "Shipping including tax."
          },
          "shipping_tax_amount": {
            "type": "number",
            "description": "Shipping tax amount."
          },
          "state": {
            "type": "integer",
            "description": "State."
          },
          "store_currency_code": {
            "type": "string",
            "description": "Store currency code."
          },
          "store_id": {
            "type": "integer",
            "description": "Store ID."
          },
          "store_to_base_rate": {
            "type": "number",
            "description": "Store-to-base rate."
          },
          "store_to_order_rate": {
            "type": "number",
            "description": "Store-to-order rate."
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal."
          },
          "subtotal_incl_tax": {
            "type": "number",
            "description": "Subtotal including tax."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "total_qty": {
            "type": "number",
            "description": "Total quantity."
          },
          "transaction_id": {
            "type": "string",
            "description": "Transaction ID."
          },
          "updated_at": {
            "type": "string",
            "description": "Updated-at timestamp."
          },
          "items": {
            "type": "array",
            "description": "Array of invoice items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-item-interface"
            }
          },
          "comments": {
            "type": "array",
            "description": "Array of any invoice comments. Otherwise, null.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-extension-interface"
          }
        },
        "required": [
          "order_id",
          "total_qty",
          "items"
        ]
      },
      "sales-data-invoice-item-interface": {
        "type": "object",
        "description": "Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.",
        "properties": {
          "additional_data": {
            "type": "string",
            "description": "Additional data."
          },
          "base_cost": {
            "type": "number",
            "description": "Base cost."
          },
          "base_discount_amount": {
            "type": "number",
            "description": "Base discount amount."
          },
          "base_discount_tax_compensation_amount": {
            "type": "number",
            "description": "Base discount tax compensation amount."
          },
          "base_price": {
            "type": "number",
            "description": "Base price."
          },
          "base_price_incl_tax": {
            "type": "number",
            "description": "Base price including tax."
          },
          "base_row_total": {
            "type": "number",
            "description": "Base row total."
          },
          "base_row_total_incl_tax": {
            "type": "number",
            "description": "Base row total including tax."
          },
          "base_tax_amount": {
            "type": "number",
            "description": "Base tax amount."
          },
          "description": {
            "type": "string",
            "description": "Description."
          },
          "discount_amount": {
            "type": "number",
            "description": "Discount amount."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice item ID."
          },
          "discount_tax_compensation_amount": {
            "type": "number",
            "description": "Discount tax compensation amount."
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "price": {
            "type": "number",
            "description": "Price."
          },
          "price_incl_tax": {
            "type": "number",
            "description": "Price including tax."
          },
          "product_id": {
            "type": "integer",
            "description": "Product ID."
          },
          "row_total": {
            "type": "number",
            "description": "Row total."
          },
          "row_total_incl_tax": {
            "type": "number",
            "description": "Row total including tax."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "tax_amount": {
            "type": "number",
            "description": "Tax amount."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-item-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": [
          "sku",
          "order_item_id",
          "qty"
        ]
      },
      "sales-data-invoice-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemInterface"
      },
      "sales-data-invoice-comment-interface": {
        "type": "object",
        "description": "Invoice comment interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
        "properties": {
          "is_customer_notified": {
            "type": "integer",
            "description": "Is-customer-notified flag value."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-comment-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          },
          "created_at": {
            "type": "string",
            "description": "Created-at timestamp."
          },
          "entity_id": {
            "type": "integer",
            "description": "Invoice ID."
          }
        },
        "required": [
          "is_customer_notified",
          "parent_id",
          "comment",
          "is_visible_on_front"
        ]
      },
      "sales-data-invoice-comment-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentInterface"
      },
      "sales-data-invoice-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceInterface",
        "properties": {
          "base_customer_balance_amount": {
            "type": "number"
          },
          "customer_balance_amount": {
            "type": "number"
          },
          "base_gift_cards_amount": {
            "type": "number"
          },
          "gift_cards_amount": {
            "type": "number"
          },
          "gw_base_price": {
            "type": "string"
          },
          "gw_price": {
            "type": "string"
          },
          "gw_items_base_price": {
            "type": "string"
          },
          "gw_items_price": {
            "type": "string"
          },
          "gw_card_base_price": {
            "type": "string"
          },
          "gw_card_price": {
            "type": "string"
          },
          "gw_base_tax_amount": {
            "type": "string"
          },
          "gw_tax_amount": {
            "type": "string"
          },
          "gw_items_base_tax_amount": {
            "type": "string"
          },
          "gw_items_tax_amount": {
            "type": "string"
          },
          "gw_card_base_tax_amount": {
            "type": "string"
          },
          "gw_card_tax_amount": {
            "type": "string"
          }
        }
      },
      "sales-data-invoice-search-result-interface": {
        "type": "object",
        "description": "Invoice search result interface. An invoice is a record of the receipt of payment for an order.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "sales-data-invoice-comment-search-result-interface": {
        "type": "object",
        "description": "Invoice comment search result interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Array of collection items.",
            "items": {
              "$ref": "#/components/schemas/sales-data-invoice-comment-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "sales-data-invoice-item-creation-interface": {
        "type": "object",
        "description": "Input argument for invoice creation Interface InvoiceItemCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-item-creation-extension-interface"
          },
          "order_item_id": {
            "type": "integer",
            "description": "Order item ID."
          },
          "qty": {
            "type": "number",
            "description": "Quantity."
          }
        },
        "required": [
          "order_item_id",
          "qty"
        ]
      },
      "sales-data-invoice-item-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceItemCreationInterface"
      },
      "sales-data-invoice-comment-creation-interface": {
        "type": "object",
        "description": "Interface InvoiceCommentCreationInterface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-comment-creation-extension-interface"
          },
          "comment": {
            "type": "string",
            "description": "Comment."
          },
          "is_visible_on_front": {
            "type": "integer",
            "description": "Is-visible-on-storefront flag value."
          }
        },
        "required": [
          "comment",
          "is_visible_on_front"
        ]
      },
      "sales-data-invoice-comment-creation-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCommentCreationInterface"
      },
      "sales-data-invoice-creation-arguments-interface": {
        "type": "object",
        "description": "Interface for creation arguments for Invoice.",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-invoice-creation-arguments-extension-interface"
          }
        }
      },
      "sales-data-invoice-creation-arguments-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\InvoiceCreationArgumentsInterface"
      }
    }
  }
}