{
  "openapi": "3.0.0",
  "info": {
    "version": "2.4.8",
    "title": "Commerce Admin REST endpoints - Products Only",
    "description": "Product-related endpoints and schemas from Adobe Commerce REST API"
  },
  "tags": [
    {
      "name": "bundle-products/{productSku}/children"
    },
    {
      "name": "bundle-products/{sku}/links/{id}"
    },
    {
      "name": "bundle-products/{sku}/links/{optionId}"
    },
    {
      "name": "bundle-products/{sku}/options/{optionId}"
    },
    {
      "name": "bundle-products/{sku}/options/{optionId}/children/{childSku}"
    },
    {
      "name": "bundle-products/{sku}/options/all"
    },
    {
      "name": "bundle-products/options/{optionId}"
    },
    {
      "name": "bundle-products/options/add"
    },
    {
      "name": "bundle-products/options/types"
    },
    {
      "name": "categories/{categoryId}/products"
    },
    {
      "name": "categories/{categoryId}/products/{sku}"
    },
    {
      "name": "configurable-products/{sku}/child"
    },
    {
      "name": "configurable-products/{sku}/children"
    },
    {
      "name": "configurable-products/{sku}/children/{childSku}"
    },
    {
      "name": "configurable-products/{sku}/options"
    },
    {
      "name": "configurable-products/{sku}/options/{id}"
    },
    {
      "name": "configurable-products/{sku}/options/all"
    },
    {
      "name": "configurable-products/variation"
    },
    {
      "name": "inventory/are-product-salable-for-requested-qty/"
    },
    {
      "name": "inventory/are-products-salable"
    },
    {
      "name": "inventory/bulk-product-source-assign"
    },
    {
      "name": "inventory/bulk-product-source-transfer"
    },
    {
      "name": "inventory/bulk-product-source-unassign"
    },
    {
      "name": "inventory/get-product-salable-quantity/{sku}/{stockId}"
    },
    {
      "name": "inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}"
    },
    {
      "name": "inventory/is-product-salable/{sku}/{stockId}"
    },
    {
      "name": "products"
    },
    {
      "name": "products-render-info"
    },
    {
      "name": "products/{productSku}/stockItems/{itemId}"
    },
    {
      "name": "products/{sku}"
    },
    {
      "name": "products/{sku}/downloadable-links"
    },
    {
      "name": "products/{sku}/downloadable-links/{id}"
    },
    {
      "name": "products/{sku}/downloadable-links/samples"
    },
    {
      "name": "products/{sku}/downloadable-links/samples/{id}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
    },
    {
      "name": "products/{sku}/links"
    },
    {
      "name": "products/{sku}/links/{type}"
    },
    {
      "name": "products/{sku}/links/{type}/{linkedProductSku}"
    },
    {
      "name": "products/{sku}/media"
    },
    {
      "name": "products/{sku}/media/{entryId}"
    },
    {
      "name": "products/{sku}/options"
    },
    {
      "name": "products/{sku}/options/{optionId}"
    },
    {
      "name": "products/{sku}/websites"
    },
    {
      "name": "products/{sku}/websites/{websiteId}"
    },
    {
      "name": "products/attribute-sets"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/attributes"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
    },
    {
      "name": "products/attribute-sets/{attributeSetId}/groups"
    },
    {
      "name": "products/attribute-sets/attributes"
    },
    {
      "name": "products/attribute-sets/groups"
    },
    {
      "name": "products/attribute-sets/groups/{groupId}"
    },
    {
      "name": "products/attribute-sets/groups/list"
    },
    {
      "name": "products/attribute-sets/sets/list"
    },
    {
      "name": "products/attributes"
    },
    {
      "name": "products/attributes/{attributeCode}"
    },
    {
      "name": "products/attributes/{attributeCode}/is-filterable"
    },
    {
      "name": "products/attributes/{attributeCode}/is-filterable/{isFilterable}"
    },
    {
      "name": "products/attributes/{attributeCode}/options"
    },
    {
      "name": "products/attributes/{attributeCode}/options/{optionId}"
    },
    {
      "name": "products/attributes/types"
    },
    {
      "name": "products/base-prices"
    },
    {
      "name": "products/base-prices-information"
    },
    {
      "name": "products/cost"
    },
    {
      "name": "products/cost-delete"
    },
    {
      "name": "products/cost-information"
    },
    {
      "name": "products/downloadable-links/{id}"
    },
    {
      "name": "products/downloadable-links/samples/{id}"
    },
    {
      "name": "products/links/{type}/attributes"
    },
    {
      "name": "products/links/types"
    },
    {
      "name": "products/media/types/{attributeSetName}"
    },
    {
      "name": "products/options"
    },
    {
      "name": "products/options/{optionId}"
    },
    {
      "name": "products/options/types"
    },
    {
      "name": "products/special-price"
    },
    {
      "name": "products/special-price-delete"
    },
    {
      "name": "products/special-price-information"
    },
    {
      "name": "products/tier-prices"
    },
    {
      "name": "products/tier-prices-delete"
    },
    {
      "name": "products/tier-prices-information"
    },
    {
      "name": "products/types"
    },
    {
      "name": "sharedCatalog/{id}/assignProducts"
    },
    {
      "name": "sharedCatalog/{id}/products"
    },
    {
      "name": "sharedCatalog/{id}/unassignProducts"
    },
    {
      "name": "stockItems/{productSku}"
    },
    {
      "name": "stockStatuses/{productSku}"
    }
  ],
  "paths": {
    "/V1/bundle-products/options/add": {
      "post": {
        "tags": [
          "bundle-products/options/add"
        ],
        "description": "Add new option for bundle product",
        "operationId": "PostV1BundleproductsOptionsAdd",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1BundleproductsOptionsAddPostv1bundleproductsoptionsaddbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/options/add"
      }
    },
    "/V1/bundle-products/options/types": {
      "get": {
        "tags": [
          "bundle-products/options/types"
        ],
        "description": "Get all types for options for bundle products",
        "operationId": "GetV1BundleproductsOptionsTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/options/types"
      }
    },
    "/V1/bundle-products/options/{optionId}": {
      "put": {
        "tags": [
          "bundle-products/options/{optionId}"
        ],
        "description": "Add new option for bundle product",
        "operationId": "PutV1BundleproductsOptionsOptionId",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1BundleproductsOptionsAddPostv1bundleproductsoptionsaddbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/options/{optionId}"
      }
    },
    "/V1/bundle-products/{productSku}/children": {
      "get": {
        "tags": [
          "bundle-products/{productSku}/children"
        ],
        "description": "Get all children for Bundle product",
        "operationId": "GetV1BundleproductsProductSkuChildren",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-link-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{productSku}/children"
      }
    },
    "/V1/bundle-products/{sku}/links/{id}": {
      "put": {
        "tags": [
          "bundle-products/{sku}/links/{id}"
        ],
        "description": "",
        "operationId": "PutV1BundleproductsSkuLinksId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1BundleproductsSkuLinksIdPutv1bundleproductsskulinksidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/links/{id}"
      }
    },
    "/V1/bundle-products/{sku}/links/{optionId}": {
      "post": {
        "tags": [
          "bundle-products/{sku}/links/{optionId}"
        ],
        "description": "Add child product to specified Bundle option by product sku",
        "operationId": "PostV1BundleproductsSkuLinksOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1BundleproductsSkuLinksIdPutv1bundleproductsskulinksidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/links/{optionId}"
      }
    },
    "/V1/bundle-products/{sku}/options/all": {
      "get": {
        "tags": [
          "bundle-products/{sku}/options/all"
        ],
        "description": "Get all options for bundle product",
        "operationId": "GetV1BundleproductsSkuOptionsAll",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/bundle-data-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/all"
      }
    },
    "/V1/bundle-products/{sku}/options/{optionId}": {
      "get": {
        "tags": [
          "bundle-products/{sku}/options/{optionId}"
        ],
        "description": "Get option for bundle product",
        "operationId": "GetV1BundleproductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/bundle-data-option-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}"
      },
      "delete": {
        "tags": [
          "bundle-products/{sku}/options/{optionId}"
        ],
        "description": "Remove bundle option",
        "operationId": "DeleteV1BundleproductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}"
      }
    },
    "/V1/bundle-products/{sku}/options/{optionId}/children/{childSku}": {
      "delete": {
        "tags": [
          "bundle-products/{sku}/options/{optionId}/children/{childSku}"
        ],
        "description": "Remove product from Bundle product option",
        "operationId": "DeleteV1BundleproductsSkuOptionsOptionIdChildrenChildSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "childSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "bundle-products/{sku}/options/{optionId}/children/{childSku}"
      }
    },
    "/V1/categories/{categoryId}/products": {
      "get": {
        "tags": [
          "categories/{categoryId}/products"
        ],
        "description": "Get products assigned to category",
        "operationId": "GetV1CategoriesCategoryIdProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products"
      },
      "post": {
        "tags": [
          "categories/{categoryId}/products"
        ],
        "description": "Assign a product to the required category",
        "operationId": "PostV1CategoriesCategoryIdProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CategoriesCategoryIdProductsPostv1categoriescategoryidproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products"
      },
      "put": {
        "tags": [
          "categories/{categoryId}/products"
        ],
        "description": "Assign a product to the required category",
        "operationId": "PutV1CategoriesCategoryIdProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CategoriesCategoryIdProductsPostv1categoriescategoryidproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if assigned"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products"
      }
    },
    "/V1/categories/{categoryId}/products/{sku}": {
      "delete": {
        "tags": [
          "categories/{categoryId}/products/{sku}"
        ],
        "description": "Remove the product assignment from the category by category id and sku",
        "operationId": "DeleteV1CategoriesCategoryIdProductsSku",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if products successfully deleted"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if products successfully deleted"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "categories/{categoryId}/products/{sku}"
      }
    },
    "/V1/configurable-products/variation": {
      "put": {
        "tags": [
          "configurable-products/variation"
        ],
        "description": "Generate variation based on same product",
        "operationId": "PutV1ConfigurableproductsVariation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "product",
                  "options"
                ],
                "properties": {
                  "product": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/configurable-product-data-option-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "product",
                  "options"
                ],
                "properties": {
                  "product": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  },
                  "options": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/configurable-product-data-option-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/variation"
      }
    },
    "/V1/configurable-products/{sku}/child": {
      "post": {
        "tags": [
          "configurable-products/{sku}/child"
        ],
        "description": "",
        "operationId": "PostV1ConfigurableproductsSkuChild",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "childSku"
                ],
                "properties": {
                  "childSku": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "childSku"
                ],
                "properties": {
                  "childSku": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/child"
      }
    },
    "/V1/configurable-products/{sku}/children": {
      "get": {
        "tags": [
          "configurable-products/{sku}/children"
        ],
        "description": "Get all children for Configurable product",
        "operationId": "GetV1ConfigurableproductsSkuChildren",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/children"
      }
    },
    "/V1/configurable-products/{sku}/children/{childSku}": {
      "delete": {
        "tags": [
          "configurable-products/{sku}/children/{childSku}"
        ],
        "description": "Remove configurable product option",
        "operationId": "DeleteV1ConfigurableproductsSkuChildrenChildSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "childSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/children/{childSku}"
      }
    },
    "/V1/configurable-products/{sku}/options": {
      "post": {
        "tags": [
          "configurable-products/{sku}/options"
        ],
        "description": "Save option",
        "operationId": "PostV1ConfigurableproductsSkuOptions",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ConfigurableproductsSkuOptionsPostv1configurableproductsskuoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options"
      }
    },
    "/V1/configurable-products/{sku}/options/all": {
      "get": {
        "tags": [
          "configurable-products/{sku}/options/all"
        ],
        "description": "Get all options for configurable product",
        "operationId": "GetV1ConfigurableproductsSkuOptionsAll",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/configurable-product-data-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/configurable-product-data-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/all"
      }
    },
    "/V1/configurable-products/{sku}/options/{id}": {
      "get": {
        "tags": [
          "configurable-products/{sku}/options/{id}"
        ],
        "description": "Get option for configurable product",
        "operationId": "GetV1ConfigurableproductsSkuOptionsId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/configurable-product-data-option-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/{id}"
      },
      "put": {
        "tags": [
          "configurable-products/{sku}/options/{id}"
        ],
        "description": "Save option",
        "operationId": "PutV1ConfigurableproductsSkuOptionsId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ConfigurableproductsSkuOptionsPostv1configurableproductsskuoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/{id}"
      },
      "delete": {
        "tags": [
          "configurable-products/{sku}/options/{id}"
        ],
        "description": "Remove option from configurable product",
        "operationId": "DeleteV1ConfigurableproductsSkuOptionsId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "configurable-products/{sku}/options/{id}"
      }
    },
    "/V1/inventory/are-product-salable-for-requested-qty/": {
      "get": {
        "tags": [
          "inventory/are-product-salable-for-requested-qty/"
        ],
        "description": "Get whether products are salable in requested Qty for given set of SKUs in specified stock.",
        "operationId": "GetV1InventoryAreproductsalableforrequestedqty",
        "parameters": [
          {
            "name": "skuRequests[0][sku]",
            "in": "query",
            "description": "Product sku.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skuRequests[0][qty]",
            "in": "query",
            "description": "Product quantity.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "stockId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/are-product-salable-for-requested-qty/"
      }
    },
    "/V1/inventory/are-products-salable": {
      "get": {
        "tags": [
          "inventory/are-products-salable"
        ],
        "description": "Get products salable status for given SKUs and given Stock.",
        "operationId": "GetV1InventoryAreproductssalable",
        "parameters": [
          {
            "name": "skus",
            "in": "query",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "stockId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/are-products-salable"
      }
    },
    "/V1/inventory/bulk-partial-source-transfer": {
      "post": {
        "tags": [
          "inventory/bulk-partial-source-transfer"
        ],
        "description": "Run bulk partial inventory transfer for specified items.",
        "operationId": "PostV1InventoryBulkpartialsourcetransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "originSourceCode",
                  "destinationSourceCode",
                  "items"
                ],
                "properties": {
                  "originSourceCode": {
                    "type": "string"
                  },
                  "destinationSourceCode": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-catalog-api-data-partial-inventory-transfer-item-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "originSourceCode",
                  "destinationSourceCode",
                  "items"
                ],
                "properties": {
                  "originSourceCode": {
                    "type": "string"
                  },
                  "destinationSourceCode": {
                    "type": "string"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-catalog-api-data-partial-inventory-transfer-item-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-partial-source-transfer"
      }
    },
    "/V1/inventory/bulk-product-source-assign": {
      "post": {
        "tags": [
          "inventory/bulk-product-source-assign"
        ],
        "description": "Run mass product to source assignment",
        "operationId": "PostV1InventoryBulkproductsourceassign",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryBulkproductsourceassignPostv1inventorybulkproductsourceassignbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-product-source-assign"
      }
    },
    "/V1/inventory/bulk-product-source-transfer": {
      "post": {
        "tags": [
          "inventory/bulk-product-source-transfer"
        ],
        "description": "Run bulk inventory transfer",
        "operationId": "PostV1InventoryBulkproductsourcetransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "skus",
                  "originSource",
                  "destinationSource",
                  "unassignFromOrigin"
                ],
                "properties": {
                  "skus": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "originSource": {
                    "type": "string"
                  },
                  "destinationSource": {
                    "type": "string"
                  },
                  "unassignFromOrigin": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "skus",
                  "originSource",
                  "destinationSource",
                  "unassignFromOrigin"
                ],
                "properties": {
                  "skus": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "originSource": {
                    "type": "string"
                  },
                  "destinationSource": {
                    "type": "string"
                  },
                  "unassignFromOrigin": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-product-source-transfer"
      }
    },
    "/V1/inventory/bulk-product-source-unassign": {
      "post": {
        "tags": [
          "inventory/bulk-product-source-unassign"
        ],
        "description": "Run mass product to source un-assignment",
        "operationId": "PostV1InventoryBulkproductsourceunassign",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryBulkproductsourceassignPostv1inventorybulkproductsourceassignbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/bulk-product-source-unassign"
      }
    },
    "/V1/inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}": {
      "get": {
        "tags": [
          "inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}"
        ],
        "description": "Provides stock index export from inventory_stock_% table",
        "operationId": "GetV1InventoryDumpstockindexdataSalesChannelTypeSalesChannelCode",
        "parameters": [
          {
            "name": "salesChannelType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesChannelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-export-stock-api-data-product-stock-index-data-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-export-stock-api-data-product-stock-index-data-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/dump-stock-index-data/{salesChannelType}/{salesChannelCode}"
      }
    },
    "/V1/inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}": {
      "get": {
        "tags": [
          "inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}"
        ],
        "description": "Export product stock data filtered by search criteria.",
        "operationId": "GetV1InventoryExportstocksalableqtySalesChannelTypeSalesChannelCode",
        "parameters": [
          {
            "name": "salesChannelType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "salesChannelCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/export-stock-salable-qty/{salesChannelType}/{salesChannelCode}"
      }
    },
    "/V1/inventory/get-distance": {
      "get": {
        "tags": [
          "inventory/get-distance"
        ],
        "description": "Get distance between two points",
        "operationId": "GetV1InventoryGetdistance",
        "parameters": [
          {
            "name": "source[lat]",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "source[lng]",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destination[lat]",
            "in": "query",
            "description": "Latitude",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destination[lng]",
            "in": "query",
            "description": "Longitude",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-distance"
      }
    },
    "/V1/inventory/get-distance-provider-code": {
      "get": {
        "tags": [
          "inventory/get-distance-provider-code"
        ],
        "description": "Get Default distance provider code",
        "operationId": "GetV1InventoryGetdistanceprovidercode",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-distance-provider-code"
      }
    },
    "/V1/inventory/get-latlng-from-address": {
      "get": {
        "tags": [
          "inventory/get-latlng-from-address"
        ],
        "description": "Get latitude and longitude object from address",
        "operationId": "GetV1InventoryGetlatlngfromaddress",
        "parameters": [
          {
            "name": "address[country]",
            "in": "query",
            "description": "Shipping country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[postcode]",
            "in": "query",
            "description": "Shipping postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[street]",
            "in": "query",
            "description": "Shipping street address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[region]",
            "in": "query",
            "description": "Shipping region",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[city]",
            "in": "query",
            "description": "Shipping city",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-latlng-from-address"
      }
    },
    "/V1/inventory/get-latslngs-from-address": {
      "get": {
        "tags": [
          "inventory/get-latslngs-from-address"
        ],
        "description": "Get all available latitude and longitude objects from address.",
        "operationId": "GetV1InventoryGetlatslngsfromaddress",
        "parameters": [
          {
            "name": "address[country]",
            "in": "query",
            "description": "Shipping country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[postcode]",
            "in": "query",
            "description": "Shipping postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[street]",
            "in": "query",
            "description": "Shipping street address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[region]",
            "in": "query",
            "description": "Shipping region",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[city]",
            "in": "query",
            "description": "Shipping city",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-latslngs-from-address"
      }
    },
    "/V1/inventory/get-product-salable-quantity/{sku}/{stockId}": {
      "get": {
        "tags": [
          "inventory/get-product-salable-quantity/{sku}/{stockId}"
        ],
        "description": "Get Product Quantity for given SKU and Stock",
        "operationId": "GetV1InventoryGetproductsalablequantitySkuStockId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-product-salable-quantity/{sku}/{stockId}"
      }
    },
    "/V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}": {
      "get": {
        "tags": [
          "inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}"
        ],
        "description": "Get Sources assigned to Stock ordered by priority If Stock with given id doesn't exist then return an empty array",
        "operationId": "GetV1InventoryGetsourcesassignedtostockorderedbypriorityStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-sources-assigned-to-stock-ordered-by-priority/{stockId}"
      }
    },
    "/V1/inventory/in-store-pickup/pickup-locations/": {
      "get": {
        "tags": [
          "inventory/in-store-pickup/pickup-locations/"
        ],
        "description": "Get Pickup Locations according to the results of filtration by Search Request.",
        "operationId": "GetV1InventoryInstorepickupPickuplocations",
        "parameters": [
          {
            "name": "searchRequest[area][radius]",
            "in": "query",
            "description": "Search radius in KM.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchRequest[area][searchTerm]",
            "in": "query",
            "description": "Search term string.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][country][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][country][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][postcode][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][postcode][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][region][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][region][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][regionId][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][regionId][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][city][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][city][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][street][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][street][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][name][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][name][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][pickupLocationCode][value]",
            "in": "query",
            "description": "Value.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[filters][pickupLocationCode][conditionType]",
            "in": "query",
            "description": "Condition Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchRequest[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchRequest[scopeType]",
            "in": "query",
            "description": "Sales Channel Type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[scopeCode]",
            "in": "query",
            "description": "Sales Channel code.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[sort][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[sort][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchRequest[extensionAttributes][productsInfo][0][sku]",
            "in": "query",
            "description": "Product SKU.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-result-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/in-store-pickup/pickup-locations/"
      }
    },
    "/V1/inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}": {
      "get": {
        "tags": [
          "inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}"
        ],
        "description": "Get is product salable for given SKU in a given Stock for a certain Qty",
        "operationId": "GetV1InventoryIsproductsalableforrequestedqtySkuStockIdRequestedQty",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "requestedQty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-sales-api-data-product-salable-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-sales-api-data-product-salable-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/is-product-salable-for-requested-qty/{sku}/{stockId}/{requestedQty}"
      }
    },
    "/V1/inventory/is-product-salable/{sku}/{stockId}": {
      "get": {
        "tags": [
          "inventory/is-product-salable/{sku}/{stockId}"
        ],
        "description": "Get is product in salable for given SKU in a given Stock",
        "operationId": "GetV1InventoryIsproductsalableSkuStockId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/is-product-salable/{sku}/{stockId}"
      }
    },
    "/V1/inventory/low-quantity-notification": {
      "post": {
        "tags": [
          "inventory/low-quantity-notification"
        ],
        "description": "",
        "operationId": "PostV1InventoryLowquantitynotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "sourceItemConfigurations"
                ],
                "properties": {
                  "sourceItemConfigurations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "sourceItemConfigurations"
                ],
                "properties": {
                  "sourceItemConfigurations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/low-quantity-notification"
      }
    },
    "/V1/inventory/low-quantity-notification/{sourceCode}/{sku}": {
      "get": {
        "tags": [
          "inventory/low-quantity-notification/{sourceCode}/{sku}"
        ],
        "description": "Get the source item configuration",
        "operationId": "GetV1InventoryLowquantitynotificationSourceCodeSku",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/low-quantity-notification/{sourceCode}/{sku}"
      }
    },
    "/V1/inventory/low-quantity-notifications-delete": {
      "post": {
        "tags": [
          "inventory/low-quantity-notifications-delete"
        ],
        "description": "Delete multiple source items configuration for low quantity",
        "operationId": "PostV1InventoryLowquantitynotificationsdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/low-quantity-notifications-delete"
      }
    },
    "/V1/inventory/source-items": {
      "get": {
        "tags": [
          "inventory/source-items"
        ],
        "description": "Find SourceItems by SearchCriteria We need to have this method for direct work with SourceItems because this object contains additional data like as qty, status (for example can be searchable by additional field)",
        "operationId": "GetV1InventorySourceitems",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-item-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-item-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-items"
      },
      "post": {
        "tags": [
          "inventory/source-items"
        ],
        "description": "Save Multiple Source item data",
        "operationId": "PostV1InventorySourceitems",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-items"
      }
    },
    "/V1/inventory/source-items-delete": {
      "post": {
        "tags": [
          "inventory/source-items-delete"
        ],
        "description": "Delete Multiple Source item data",
        "operationId": "PostV1InventorySourceitemsdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-items-delete"
      }
    },
    "/V1/inventory/source-selection-algorithm-list": {
      "get": {
        "tags": [
          "inventory/source-selection-algorithm-list"
        ],
        "description": "",
        "operationId": "GetV1InventorySourceselectionalgorithmlist",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-selection-algorithm-list"
      }
    },
    "/V1/inventory/source-selection-algorithm-result": {
      "post": {
        "tags": [
          "inventory/source-selection-algorithm-result"
        ],
        "description": "",
        "operationId": "PostV1InventorySourceselectionalgorithmresult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "inventoryRequest",
                  "algorithmCode"
                ],
                "properties": {
                  "inventoryRequest": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-interface"
                  },
                  "algorithmCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "inventoryRequest",
                  "algorithmCode"
                ],
                "properties": {
                  "inventoryRequest": {
                    "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-interface"
                  },
                  "algorithmCode": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/source-selection-algorithm-result"
      }
    },
    "/V1/inventory/sources": {
      "get": {
        "tags": [
          "inventory/sources"
        ],
        "description": "Find Sources by SearchCriteria SearchCriteria is not required because load all stocks is useful case",
        "operationId": "GetV1InventorySources",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources"
      },
      "post": {
        "tags": [
          "inventory/sources"
        ],
        "description": "Save Source data",
        "operationId": "PostV1InventorySources",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventorySourcesPostv1inventorysourcesbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources"
      }
    },
    "/V1/inventory/sources/{sourceCode}": {
      "get": {
        "tags": [
          "inventory/sources/{sourceCode}"
        ],
        "description": "Get Source data by given code. If you want to create plugin on get method, also you need to create separate Plugin on getList method, because entity loading way is different for these methods",
        "operationId": "GetV1InventorySourcesSourceCode",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources/{sourceCode}"
      },
      "put": {
        "tags": [
          "inventory/sources/{sourceCode}"
        ],
        "description": "Save Source data",
        "operationId": "PutV1InventorySourcesSourceCode",
        "parameters": [
          {
            "name": "sourceCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventorySourcesPostv1inventorysourcesbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/sources/{sourceCode}"
      }
    },
    "/V1/inventory/stock-resolver/{type}/{code}": {
      "get": {
        "tags": [
          "inventory/stock-resolver/{type}/{code}"
        ],
        "description": "Resolve Stock by Sales Channel type and code",
        "operationId": "GetV1InventoryStockresolverTypeCode",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-resolver/{type}/{code}"
      }
    },
    "/V1/inventory/stock-source-links": {
      "get": {
        "tags": [
          "inventory/stock-source-links"
        ],
        "description": "Find StockSourceLink list by given SearchCriteria",
        "operationId": "GetV1InventoryStocksourcelinks",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-source-link-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-source-link-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-source-links"
      },
      "post": {
        "tags": [
          "inventory/stock-source-links"
        ],
        "description": "Save StockSourceLink list data",
        "operationId": "PostV1InventoryStocksourcelinks",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksourcelinksPostv1inventorystocksourcelinksbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-source-links"
      }
    },
    "/V1/inventory/stock-source-links-delete": {
      "post": {
        "tags": [
          "inventory/stock-source-links-delete"
        ],
        "description": "Remove StockSourceLink list list",
        "operationId": "PostV1InventoryStocksourcelinksdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksourcelinksPostv1inventorystocksourcelinksbody"
        },
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stock-source-links-delete"
      }
    },
    "/V1/inventory/stocks": {
      "get": {
        "tags": [
          "inventory/stocks"
        ],
        "description": "Find Stocks by given SearchCriteria SearchCriteria is not required because load all stocks is useful case",
        "operationId": "GetV1InventoryStocks",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks"
      },
      "post": {
        "tags": [
          "inventory/stocks"
        ],
        "description": "Save Stock data",
        "operationId": "PostV1InventoryStocks",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksPostv1inventorystocksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks"
      }
    },
    "/V1/inventory/stocks/{stockId}": {
      "get": {
        "tags": [
          "inventory/stocks/{stockId}"
        ],
        "description": "Get Stock data by given stockId. If you want to create plugin on get method, also you need to create separate Plugin on getList method, because entity loading way is different for these methods",
        "operationId": "GetV1InventoryStocksStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks/{stockId}"
      },
      "delete": {
        "tags": [
          "inventory/stocks/{stockId}"
        ],
        "description": "Delete the Stock data by stockId. If stock is not found do nothing",
        "operationId": "DeleteV1InventoryStocksStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks/{stockId}"
      },
      "put": {
        "tags": [
          "inventory/stocks/{stockId}"
        ],
        "description": "Save Stock data",
        "operationId": "PutV1InventoryStocksStockId",
        "parameters": [
          {
            "name": "stockId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1InventoryStocksPostv1inventorystocksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/stocks/{stockId}"
      }
    },
    "/V1/products": {
      "post": {
        "tags": [
          "products"
        ],
        "description": "Create product",
        "operationId": "PostV1Products",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsPostv1productsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products"
      },
      "get": {
        "tags": [
          "products"
        ],
        "description": "Get product list",
        "operationId": "GetV1Products",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products"
      }
    },
    "/V1/products-render-info": {
      "get": {
        "tags": [
          "products-render-info"
        ],
        "description": "Collect and retrieve the list of product render info. This info contains raw prices and formatted prices, product name, stock status, store_id, etc.",
        "operationId": "GetV1Productsrenderinfo",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-render-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-render-search-results-interface"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products-render-info"
      }
    },
    "/V1/products/attribute-sets": {
      "post": {
        "tags": [
          "products/attribute-sets"
        ],
        "description": "Create attribute set from data",
        "operationId": "PostV1ProductsAttributesets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "attributeSet",
                  "skeletonId"
                ],
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "attributeSet",
                  "skeletonId"
                ],
                "properties": {
                  "attributeSet": {
                    "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                  },
                  "skeletonId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets"
      }
    },
    "/V1/products/attribute-sets/attributes": {
      "post": {
        "tags": [
          "products/attribute-sets/attributes"
        ],
        "description": "Assign attribute to attribute set",
        "operationId": "PostV1ProductsAttributesetsAttributes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "attributeSetId",
                  "attributeGroupId",
                  "attributeCode",
                  "sortOrder"
                ],
                "properties": {
                  "attributeSetId": {
                    "type": "integer"
                  },
                  "attributeGroupId": {
                    "type": "integer"
                  },
                  "attributeCode": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "attributeSetId",
                  "attributeGroupId",
                  "attributeCode",
                  "sortOrder"
                ],
                "properties": {
                  "attributeSetId": {
                    "type": "integer"
                  },
                  "attributeGroupId": {
                    "type": "integer"
                  },
                  "attributeCode": {
                    "type": "string"
                  },
                  "sortOrder": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/attributes"
      }
    },
    "/V1/products/attribute-sets/groups": {
      "post": {
        "tags": [
          "products/attribute-sets/groups"
        ],
        "description": "Save attribute group",
        "operationId": "PostV1ProductsAttributesetsGroups",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesetsGroupsPostv1productsattributesetsgroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/groups"
      }
    },
    "/V1/products/attribute-sets/groups/list": {
      "get": {
        "tags": [
          "products/attribute-sets/groups/list"
        ],
        "description": "Retrieve list of attribute groups",
        "operationId": "GetV1ProductsAttributesetsGroupsList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-search-results-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/groups/list"
      }
    },
    "/V1/products/attribute-sets/groups/{groupId}": {
      "delete": {
        "tags": [
          "products/attribute-sets/groups/{groupId}"
        ],
        "description": "Remove attribute group by id",
        "operationId": "DeleteV1ProductsAttributesetsGroupsGroupId",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/groups/{groupId}"
      }
    },
    "/V1/products/attribute-sets/sets/list": {
      "get": {
        "tags": [
          "products/attribute-sets/sets/list"
        ],
        "description": "Retrieve list of Attribute Sets",
        "operationId": "GetV1ProductsAttributesetsSetsList",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/sets/list"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}": {
      "get": {
        "tags": [
          "products/attribute-sets/{attributeSetId}"
        ],
        "description": "Retrieve attribute set information based on given ID",
        "operationId": "GetV1ProductsAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}"
      },
      "delete": {
        "tags": [
          "products/attribute-sets/{attributeSetId}"
        ],
        "description": "Remove attribute set by given ID",
        "operationId": "DeleteV1ProductsAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}"
      },
      "put": {
        "tags": [
          "products/attribute-sets/{attributeSetId}"
        ],
        "description": "Save attribute set data",
        "operationId": "PutV1ProductsAttributesetsAttributeSetId",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1EavAttributesetsAttributeSetIdPutv1eavattributesetsattributesetidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-set-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/attributes": {
      "get": {
        "tags": [
          "products/attribute-sets/{attributeSetId}/attributes"
        ],
        "description": "Retrieve related attributes based on given attribute set ID",
        "operationId": "GetV1ProductsAttributesetsAttributeSetIdAttributes",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/attributes"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/attributes/{attributeCode}": {
      "delete": {
        "tags": [
          "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
        ],
        "description": "Remove attribute from attribute set",
        "operationId": "DeleteV1ProductsAttributesetsAttributeSetIdAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/attributes/{attributeCode}"
      }
    },
    "/V1/products/attribute-sets/{attributeSetId}/groups": {
      "put": {
        "tags": [
          "products/attribute-sets/{attributeSetId}/groups"
        ],
        "description": "Save attribute group",
        "operationId": "PutV1ProductsAttributesetsAttributeSetIdGroups",
        "parameters": [
          {
            "name": "attributeSetId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesetsGroupsPostv1productsattributesetsgroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/eav-data-attribute-group-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attribute-sets/{attributeSetId}/groups"
      }
    },
    "/V1/products/attributes": {
      "get": {
        "tags": [
          "products/attributes"
        ],
        "description": "Retrieve all attributes for entity type",
        "operationId": "GetV1ProductsAttributes",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes"
      },
      "post": {
        "tags": [
          "products/attributes"
        ],
        "description": "Save attribute data",
        "operationId": "PostV1ProductsAttributes",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesPostv1productsattributesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes"
      }
    },
    "/V1/products/attributes/types": {
      "get": {
        "tags": [
          "products/attributes/types"
        ],
        "description": "Retrieve list of product attribute types",
        "operationId": "GetV1ProductsAttributesTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/types"
      }
    },
    "/V1/products/attributes/{attributeCode}": {
      "get": {
        "tags": [
          "products/attributes/{attributeCode}"
        ],
        "description": "Retrieve specific attribute",
        "operationId": "GetV1ProductsAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}"
      },
      "put": {
        "tags": [
          "products/attributes/{attributeCode}"
        ],
        "description": "Save attribute data",
        "operationId": "PutV1ProductsAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesPostv1productsattributesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}"
      },
      "delete": {
        "tags": [
          "products/attributes/{attributeCode}"
        ],
        "description": "Delete Attribute by id",
        "operationId": "DeleteV1ProductsAttributesAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}"
      }
    },
    "/V1/products/attributes/{attributeCode}/is-filterable": {
      "get": {
        "tags": [
          "products/attributes/{attributeCode}/is-filterable"
        ],
        "description": "Retrieve 'is_filterable' property for specific attribute as integer",
        "operationId": "GetV1ProductsAttributesAttributeCodeIsfilterable",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/is-filterable"
      }
    },
    "/V1/products/attributes/{attributeCode}/is-filterable/{isFilterable}": {
      "put": {
        "tags": [
          "products/attributes/{attributeCode}/is-filterable/{isFilterable}"
        ],
        "description": "Set 'is_filterable' property for specific attribute as integer",
        "operationId": "PutV1ProductsAttributesAttributeCodeIsfilterableIsFilterable",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isFilterable",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/is-filterable/{isFilterable}"
      }
    },
    "/V1/products/attributes/{attributeCode}/options": {
      "get": {
        "tags": [
          "products/attributes/{attributeCode}/options"
        ],
        "description": "Retrieve list of attribute options",
        "operationId": "GetV1ProductsAttributesAttributeCodeOptions",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/eav-data-attribute-option-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options"
      },
      "post": {
        "tags": [
          "products/attributes/{attributeCode}/options"
        ],
        "description": "Add option to attribute",
        "operationId": "PostV1ProductsAttributesAttributeCodeOptions",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesAttributeCodeOptionsPostv1productsattributesattributecodeoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options"
      }
    },
    "/V1/products/attributes/{attributeCode}/options/{optionId}": {
      "delete": {
        "tags": [
          "products/attributes/{attributeCode}/options/{optionId}"
        ],
        "description": "Delete option from attribute",
        "operationId": "DeleteV1ProductsAttributesAttributeCodeOptionsOptionId",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options/{optionId}"
      },
      "put": {
        "tags": [
          "products/attributes/{attributeCode}/options/{optionId}"
        ],
        "description": "Update attribute option",
        "operationId": "PutV1ProductsAttributesAttributeCodeOptionsOptionId",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsAttributesAttributeCodeOptionsPostv1productsattributesattributecodeoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/attributes/{attributeCode}/options/{optionId}"
      }
    },
    "/V1/products/base-prices": {
      "post": {
        "tags": [
          "products/base-prices"
        ],
        "description": "Add or update product prices. Input item should correspond \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid price, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsBaseprices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "prices"
                ],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-base-price-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "prices"
                ],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-base-price-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/base-prices"
      }
    },
    "/V1/products/base-prices-information": {
      "post": {
        "tags": [
          "products/base-prices-information"
        ],
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsBasepricesinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-base-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-base-price-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/base-prices-information"
      }
    },
    "/V1/products/cost": {
      "post": {
        "tags": [
          "products/cost"
        ],
        "description": "Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsCost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "prices"
                ],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-cost-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "prices"
                ],
                "properties": {
                  "prices": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-cost-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/cost"
      }
    },
    "/V1/products/cost-delete": {
      "post": {
        "tags": [
          "products/cost-delete"
        ],
        "description": "Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown.",
        "operationId": "PostV1ProductsCostdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Will return True if deleted."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "Will return True if deleted."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/cost-delete"
      }
    },
    "/V1/products/cost-information": {
      "post": {
        "tags": [
          "products/cost-information"
        ],
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsCostinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-cost-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-cost-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/cost-information"
      }
    },
    "/V1/products/downloadable-links/samples/{id}": {
      "delete": {
        "tags": [
          "products/downloadable-links/samples/{id}"
        ],
        "description": "Delete downloadable sample",
        "operationId": "DeleteV1ProductsDownloadablelinksSamplesId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/downloadable-links/samples/{id}"
      }
    },
    "/V1/products/downloadable-links/{id}": {
      "delete": {
        "tags": [
          "products/downloadable-links/{id}"
        ],
        "description": "Delete downloadable link",
        "operationId": "DeleteV1ProductsDownloadablelinksId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/downloadable-links/{id}"
      }
    },
    "/V1/products/links/types": {
      "get": {
        "tags": [
          "products/links/types"
        ],
        "description": "Retrieve information about available product link types",
        "operationId": "GetV1ProductsLinksTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/links/types"
      }
    },
    "/V1/products/links/{type}/attributes": {
      "get": {
        "tags": [
          "products/links/{type}/attributes"
        ],
        "description": "Provide a list of the product link type attributes",
        "operationId": "GetV1ProductsLinksTypeAttributes",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-attribute-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-attribute-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/links/{type}/attributes"
      }
    },
    "/V1/products/media/types/{attributeSetName}": {
      "get": {
        "tags": [
          "products/media/types/{attributeSetName}"
        ],
        "description": "Retrieve the list of media attributes (fronted input type is media_image) assigned to the given attribute set.",
        "operationId": "GetV1ProductsMediaTypesAttributeSetName",
        "parameters": [
          {
            "name": "attributeSetName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "list of media attributes",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "list of media attributes",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/media/types/{attributeSetName}"
      }
    },
    "/V1/products/options": {
      "post": {
        "tags": [
          "products/options"
        ],
        "description": "Save Custom Option",
        "operationId": "PostV1ProductsOptions",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsOptionsPostv1productsoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/options"
      }
    },
    "/V1/products/options/types": {
      "get": {
        "tags": [
          "products/options/types"
        ],
        "description": "Get custom option types",
        "operationId": "GetV1ProductsOptionsTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/options/types"
      }
    },
    "/V1/products/options/{optionId}": {
      "put": {
        "tags": [
          "products/options/{optionId}"
        ],
        "description": "Save Custom Option",
        "operationId": "PutV1ProductsOptionsOptionId",
        "parameters": [
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsOptionsPostv1productsoptionsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/options/{optionId}"
      }
    },
    "/V1/products/special-price": {
      "post": {
        "tags": [
          "products/special-price"
        ],
        "description": "Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsSpecialprice",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSpecialpricePostv1productsspecialpricebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/special-price"
      }
    },
    "/V1/products/special-price-delete": {
      "post": {
        "tags": [
          "products/special-price-delete"
        ],
        "description": "Delete product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the delete exception will be thrown.",
        "operationId": "PostV1ProductsSpecialpricedelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSpecialpricePostv1productsspecialpricebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/special-price-delete"
      }
    },
    "/V1/products/special-price-information": {
      "post": {
        "tags": [
          "products/special-price-information"
        ],
        "description": "Return product's special price. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsSpecialpriceinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/special-price-information"
      }
    },
    "/V1/products/tier-prices": {
      "post": {
        "tags": [
          "products/tier-prices"
        ],
        "description": "Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsTierprices",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices"
      },
      "put": {
        "tags": [
          "products/tier-prices"
        ],
        "description": "Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PutV1ProductsTierprices",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices"
      }
    },
    "/V1/products/tier-prices-delete": {
      "post": {
        "tags": [
          "products/tier-prices-delete"
        ],
        "description": "Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.",
        "operationId": "PostV1ProductsTierpricesdelete",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-price-update-result-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices-delete"
      }
    },
    "/V1/products/tier-prices-information": {
      "post": {
        "tags": [
          "products/tier-prices-information"
        ],
        "description": "Return product prices. In case of at least one of skus is not found exception will be thrown.",
        "operationId": "PostV1ProductsTierpricesinformation",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/tier-prices-information"
      }
    },
    "/V1/products/types": {
      "get": {
        "tags": [
          "products/types"
        ],
        "description": "Retrieve available product types",
        "operationId": "GetV1ProductsTypes",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-type-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-type-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/types"
      }
    },
    "/V1/products/{productSku}/stockItems/{itemId}": {
      "put": {
        "tags": [
          "products/{productSku}/stockItems/{itemId}"
        ],
        "description": "",
        "operationId": "PutV1ProductsProductSkuStockItemsItemId",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "stockItem"
                ],
                "properties": {
                  "stockItem": {
                    "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "stockItem"
                ],
                "properties": {
                  "stockItem": {
                    "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{productSku}/stockItems/{itemId}"
      }
    },
    "/V1/products/{sku}": {
      "put": {
        "tags": [
          "products/{sku}"
        ],
        "description": "Create product",
        "operationId": "PutV1ProductsSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsPostv1productsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}"
      },
      "delete": {
        "tags": [
          "products/{sku}"
        ],
        "description": "",
        "operationId": "DeleteV1ProductsSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "Will returned True if deleted"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "Will returned True if deleted"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}"
      },
      "get": {
        "tags": [
          "products/{sku}"
        ],
        "description": "Get info about product by product SKU",
        "operationId": "GetV1ProductsSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "editMode",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "forceReload",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}"
      }
    },
    "/V1/products/{sku}/downloadable-links": {
      "get": {
        "tags": [
          "products/{sku}/downloadable-links"
        ],
        "description": "List of links with associated samples",
        "operationId": "GetV1ProductsSkuDownloadablelinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-link-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links"
      },
      "post": {
        "tags": [
          "products/{sku}/downloadable-links"
        ],
        "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
        "operationId": "PostV1ProductsSkuDownloadablelinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksPostv1productsskudownloadablelinksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links"
      }
    },
    "/V1/products/{sku}/downloadable-links/samples": {
      "get": {
        "tags": [
          "products/{sku}/downloadable-links/samples"
        ],
        "description": "List of samples for downloadable product",
        "operationId": "GetV1ProductsSkuDownloadablelinksSamples",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-sample-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/downloadable-data-sample-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/samples"
      },
      "post": {
        "tags": [
          "products/{sku}/downloadable-links/samples"
        ],
        "description": "Update downloadable sample of the given product",
        "operationId": "PostV1ProductsSkuDownloadablelinksSamples",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksSamplesPostv1productsskudownloadablelinkssamplesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/samples"
      }
    },
    "/V1/products/{sku}/downloadable-links/samples/{id}": {
      "put": {
        "tags": [
          "products/{sku}/downloadable-links/samples/{id}"
        ],
        "description": "Update downloadable sample of the given product",
        "operationId": "PutV1ProductsSkuDownloadablelinksSamplesId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksSamplesPostv1productsskudownloadablelinkssamplesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/samples/{id}"
      }
    },
    "/V1/products/{sku}/downloadable-links/{id}": {
      "put": {
        "tags": [
          "products/{sku}/downloadable-links/{id}"
        ],
        "description": "Update downloadable link of the given product (link type and its resources cannot be changed)",
        "operationId": "PutV1ProductsSkuDownloadablelinksId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuDownloadablelinksPostv1productsskudownloadablelinksbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/downloadable-links/{id}"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers": {
      "get": {
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers"
        ],
        "description": "Get tier price of product",
        "operationId": "GetV1ProductsSkuGrouppricesCustomerGroupIdTiers",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}": {
      "delete": {
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
        ],
        "description": "Remove tier price from product",
        "operationId": "DeleteV1ProductsSkuGrouppricesCustomerGroupIdTiersQty",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}": {
      "post": {
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
        ],
        "description": "Create tier price for product",
        "operationId": "PostV1ProductsSkuGrouppricesCustomerGroupIdTiersQtyPricePrice",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "qty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
      }
    },
    "/V1/products/{sku}/links": {
      "post": {
        "tags": [
          "products/{sku}/links"
        ],
        "description": "Assign a product link to another product",
        "operationId": "PostV1ProductsSkuLinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-product-link-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/catalog-data-product-link-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links"
      },
      "put": {
        "tags": [
          "products/{sku}/links"
        ],
        "description": "Save product link",
        "operationId": "PutV1ProductsSkuLinks",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "entity"
                ],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "entity"
                ],
                "properties": {
                  "entity": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links"
      }
    },
    "/V1/products/{sku}/links/{type}": {
      "get": {
        "tags": [
          "products/{sku}/links/{type}"
        ],
        "description": "Provide the list of links for a specific product",
        "operationId": "GetV1ProductsSkuLinksType",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-link-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links/{type}"
      }
    },
    "/V1/products/{sku}/links/{type}/{linkedProductSku}": {
      "delete": {
        "tags": [
          "products/{sku}/links/{type}/{linkedProductSku}"
        ],
        "description": "",
        "operationId": "DeleteV1ProductsSkuLinksTypeLinkedProductSku",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedProductSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/links/{type}/{linkedProductSku}"
      }
    },
    "/V1/products/{sku}/media": {
      "post": {
        "tags": [
          "products/{sku}/media"
        ],
        "description": "Create new gallery entry",
        "operationId": "PostV1ProductsSkuMedia",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuMediaPostv1productsskumediabody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "gallery entry ID"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "gallery entry ID"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media"
      },
      "get": {
        "tags": [
          "products/{sku}/media"
        ],
        "description": "Retrieve the list of gallery entries associated with given product",
        "operationId": "GetV1ProductsSkuMedia",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media"
      }
    },
    "/V1/products/{sku}/media/{entryId}": {
      "get": {
        "tags": [
          "products/{sku}/media/{entryId}"
        ],
        "description": "Return information about gallery entry",
        "operationId": "GetV1ProductsSkuMediaEntryId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media/{entryId}"
      },
      "put": {
        "tags": [
          "products/{sku}/media/{entryId}"
        ],
        "description": "Update gallery entry",
        "operationId": "PutV1ProductsSkuMediaEntryId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuMediaPostv1productsskumediabody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media/{entryId}"
      },
      "delete": {
        "tags": [
          "products/{sku}/media/{entryId}"
        ],
        "description": "Remove gallery entry",
        "operationId": "DeleteV1ProductsSkuMediaEntryId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/media/{entryId}"
      }
    },
    "/V1/products/{sku}/options": {
      "get": {
        "tags": [
          "products/{sku}/options"
        ],
        "description": "Get the list of custom options for a specific product",
        "operationId": "GetV1ProductsSkuOptions",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/options"
      }
    },
    "/V1/products/{sku}/options/{optionId}": {
      "get": {
        "tags": [
          "products/{sku}/options/{optionId}"
        ],
        "description": "Get custom option for a specific product",
        "operationId": "GetV1ProductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/options/{optionId}"
      },
      "delete": {
        "tags": [
          "products/{sku}/options/{optionId}"
        ],
        "description": "",
        "operationId": "DeleteV1ProductsSkuOptionsOptionId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "optionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/options/{optionId}"
      }
    },
    "/V1/products/{sku}/websites": {
      "post": {
        "tags": [
          "products/{sku}/websites"
        ],
        "description": "Assign a product to the website",
        "operationId": "PostV1ProductsSkuWebsites",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuWebsitesPostv1productsskuwebsitesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/websites"
      },
      "put": {
        "tags": [
          "products/{sku}/websites"
        ],
        "description": "Assign a product to the website",
        "operationId": "PutV1ProductsSkuWebsites",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsSkuWebsitesPostv1productsskuwebsitesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully assigned to product"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/websites"
      }
    },
    "/V1/products/{sku}/websites/{websiteId}": {
      "delete": {
        "tags": [
          "products/{sku}/websites/{websiteId}"
        ],
        "description": "Remove the website assignment from the product by product sku",
        "operationId": "DeleteV1ProductsSkuWebsitesWebsiteId",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "websiteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully unassigned from product"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "will returned True if website successfully unassigned from product"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/websites/{websiteId}"
      }
    },
    "/V1/sharedCatalog": {
      "post": {
        "tags": [
          "sharedCatalog"
        ],
        "description": "Create or update Shared Catalog service.",
        "operationId": "PostV1SharedCatalog",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogPostv1sharedcatalogbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog"
      }
    },
    "/V1/sharedCatalog/": {
      "get": {
        "tags": [
          "sharedCatalog/"
        ],
        "description": "Return the list of shared catalogs and basic properties for each catalog.",
        "operationId": "GetV1SharedCatalog",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/"
      }
    },
    "/V1/sharedCatalog/{id}": {
      "put": {
        "tags": [
          "sharedCatalog/{id}"
        ],
        "description": "Create or update Shared Catalog service.",
        "operationId": "PutV1SharedCatalogId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogPostv1sharedcatalogbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}"
      }
    },
    "/V1/sharedCatalog/{id}/assignCategories": {
      "post": {
        "tags": [
          "sharedCatalog/{id}/assignCategories"
        ],
        "description": "Add categories into the shared catalog.",
        "operationId": "PostV1SharedCatalogIdAssignCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignCategoriesPostv1sharedcatalogidassigncategoriesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/assignCategories"
      }
    },
    "/V1/sharedCatalog/{id}/assignProducts": {
      "post": {
        "tags": [
          "sharedCatalog/{id}/assignProducts"
        ],
        "description": "Add products into the shared catalog.",
        "operationId": "PostV1SharedCatalogIdAssignProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignProductsPostv1sharedcatalogidassignproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/assignProducts"
      }
    },
    "/V1/sharedCatalog/{id}/categories": {
      "get": {
        "tags": [
          "sharedCatalog/{id}/categories"
        ],
        "description": "Return the list of categories in the selected shared catalog.",
        "operationId": "GetV1SharedCatalogIdCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/categories"
      }
    },
    "/V1/sharedCatalog/{id}/products": {
      "get": {
        "tags": [
          "sharedCatalog/{id}/products"
        ],
        "description": "Return the list of product SKUs in the selected shared catalog.",
        "operationId": "GetV1SharedCatalogIdProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/products"
      }
    },
    "/V1/sharedCatalog/{id}/unassignCategories": {
      "post": {
        "tags": [
          "sharedCatalog/{id}/unassignCategories"
        ],
        "description": "Remove the specified categories from the shared catalog.",
        "operationId": "PostV1SharedCatalogIdUnassignCategories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignCategoriesPostv1sharedcatalogidassigncategoriesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/unassignCategories"
      }
    },
    "/V1/sharedCatalog/{id}/unassignProducts": {
      "post": {
        "tags": [
          "sharedCatalog/{id}/unassignProducts"
        ],
        "description": "Remove the specified products from the shared catalog.",
        "operationId": "PostV1SharedCatalogIdUnassignProducts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogIdAssignProductsPostv1sharedcatalogidassignproductsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{id}/unassignProducts"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}": {
      "get": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}"
        ],
        "description": "Return the following properties for the selected shared catalog: ID, Store Group ID, Name, Type, Description, Customer Group, Tax Class.",
        "operationId": "GetV1SharedCatalogSharedCatalogId",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}"
      },
      "delete": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}"
        ],
        "description": "Delete a shared catalog by ID.",
        "operationId": "DeleteV1SharedCatalogSharedCatalogId",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/assignCompanies": {
      "post": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}/assignCompanies"
        ],
        "description": "Assign companies to a shared catalog.",
        "operationId": "PostV1SharedCatalogSharedCatalogIdAssignCompanies",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogSharedCatalogIdAssignCompaniesPostv1sharedcatalogsharedcatalogidassigncompaniesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/assignCompanies"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/assignTierPrices": {
      "post": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}/assignTierPrices"
        ],
        "description": "Assign custom prices",
        "operationId": "PostV1SharedCatalogSharedCatalogIdAssignTierPrices",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsTierpricesPostv1productstierpricesbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/assignTierPrices"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/companies": {
      "get": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}/companies"
        ],
        "description": "Return the list of company IDs for the companies assigned to the selected catalog.",
        "operationId": "GetV1SharedCatalogSharedCatalogIdCompanies",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/companies"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/resetTierPrices": {
      "post": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}/resetTierPrices"
        ],
        "description": "Reset custom prices",
        "operationId": "PostV1SharedCatalogSharedCatalogIdResetTierPrices",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1ProductsBasepricesinformationPostv1productsbasepricesinformationbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/resetTierPrices"
      }
    },
    "/V1/sharedCatalog/{sharedCatalogId}/unassignCompanies": {
      "post": {
        "tags": [
          "sharedCatalog/{sharedCatalogId}/unassignCompanies"
        ],
        "description": "Unassign companies from a shared catalog.",
        "operationId": "PostV1SharedCatalogSharedCatalogIdUnassignCompanies",
        "parameters": [
          {
            "name": "sharedCatalogId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1SharedCatalogSharedCatalogIdAssignCompaniesPostv1sharedcatalogsharedcatalogidassigncompaniesbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "sharedCatalog/{sharedCatalogId}/unassignCompanies"
      }
    },
    "/V1/stockItems/lowStock/": {
      "get": {
        "tags": [
          "stockItems/lowStock/"
        ],
        "description": "Retrieves a list of SKU's with low inventory qty",
        "operationId": "GetV1StockItemsLowStock",
        "parameters": [
          {
            "name": "scopeId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "qty",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-collection-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-collection-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "stockItems/lowStock/"
      }
    },
    "/V1/stockItems/{productSku}": {
      "get": {
        "tags": [
          "stockItems/{productSku}"
        ],
        "description": "",
        "operationId": "GetV1StockItemsProductSku",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "stockItems/{productSku}"
      }
    },
    "/V1/stockStatuses/{productSku}": {
      "get": {
        "tags": [
          "stockStatuses/{productSku}"
        ],
        "description": "",
        "operationId": "GetV1StockStatusesProductSku",
        "parameters": [
          {
            "name": "productSku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scopeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-status-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/catalog-inventory-data-stock-status-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "stockStatuses/{productSku}"
      }
    }
  },
  "components": {
    "requestBodies": {
      "PostV1SharedCatalogPostv1sharedcatalogbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "sharedCatalog"
              ],
              "properties": {
                "sharedCatalog": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "sharedCatalog"
              ],
              "properties": {
                "sharedCatalog": {
                  "$ref": "#/components/schemas/shared-catalog-data-shared-catalog-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SharedCatalogIdAssignProductsPostv1sharedcatalogidassignproductsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "products"
              ],
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "products"
              ],
              "properties": {
                "products": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1SharedCatalogIdAssignCategoriesPostv1sharedcatalogidassigncategoriesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "categories"
              ],
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "categories"
              ],
              "properties": {
                "categories": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-category-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsOptionsPostv1productsoptionsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "option"
              ],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "option"
              ],
              "properties": {
                "option": {
                  "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsTierpricesPostv1productstierpricesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "prices"
              ],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "prices"
              ],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-tier-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryLowquantitynotificationsdeletePostv1inventorylowquantitynotificationsdeletebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "sourceItems"
              ],
              "properties": {
                "sourceItems": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-item-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "sourceItems"
              ],
              "properties": {
                "sourceItems": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-source-item-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSpecialpricePostv1productsspecialpricebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "prices"
              ],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "prices"
              ],
              "properties": {
                "prices": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-special-price-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CategoriesCategoryIdProductsPostv1categoriescategoryidproductsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "productLink"
              ],
              "properties": {
                "productLink": {
                  "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "productLink"
              ],
              "properties": {
                "productLink": {
                  "$ref": "#/components/schemas/catalog-data-category-product-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsPostv1productsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "product"
              ],
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                },
                "saveOptions": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "product"
              ],
              "properties": {
                "product": {
                  "$ref": "#/components/schemas/catalog-data-product-interface"
                },
                "saveOptions": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CategoriesPostv1categoriesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "category"
              ],
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "category"
              ],
              "properties": {
                "category": {
                  "$ref": "#/components/schemas/catalog-data-category-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventorySourcesPostv1inventorysourcesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "source"
              ],
              "properties": {
                "source": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "source"
              ],
              "properties": {
                "source": {
                  "$ref": "#/components/schemas/inventory-api-data-source-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryStocksourcelinksPostv1inventorystocksourcelinksbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "links"
              ],
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-stock-source-link-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "links"
              ],
              "properties": {
                "links": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-api-data-stock-source-link-interface"
                  }
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1InventoryStocksPostv1inventorystocksbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "stock"
              ],
              "properties": {
                "stock": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "stock"
              ],
              "properties": {
                "stock": {
                  "$ref": "#/components/schemas/inventory-api-data-stock-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsAttributesPostv1productsattributesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "attribute"
              ],
              "properties": {
                "attribute": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "attribute"
              ],
              "properties": {
                "attribute": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSkuMediaPostv1productsskumediabody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "entry"
              ],
              "properties": {
                "entry": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "entry"
              ],
              "properties": {
                "entry": {
                  "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1ProductsSkuWebsitesPostv1productsskuwebsitesbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "productWebsiteLink"
              ],
              "properties": {
                "productWebsiteLink": {
                  "$ref": "#/components/schemas/catalog-data-product-website-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "productWebsiteLink"
              ],
              "properties": {
                "productWebsiteLink": {
                  "$ref": "#/components/schemas/catalog-data-product-website-link-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "catalog-data-product-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "sku": {
            "type": "string",
            "description": "Sku"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "attribute_set_id": {
            "type": "integer",
            "description": "Attribute set id"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "status": {
            "type": "integer",
            "description": "Status"
          },
          "visibility": {
            "type": "integer",
            "description": "Visibility"
          },
          "type_id": {
            "type": "string",
            "description": "Type id"
          },
          "created_at": {
            "type": "string",
            "description": "Created date"
          },
          "updated_at": {
            "type": "string",
            "description": "Updated date"
          },
          "weight": {
            "type": "number",
            "description": "Weight"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-extension-interface"
          },
          "product_links": {
            "type": "array",
            "description": "Product links info",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-link-interface"
            }
          },
          "options": {
            "type": "array",
            "description": "List of product options",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-custom-option-interface"
            }
          },
          "media_gallery_entries": {
            "type": "array",
            "description": "Media gallery entries",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-interface"
            }
          },
          "tier_prices": {
            "type": "array",
            "description": "List of product tier prices",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
            }
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "sku"
        ]
      },
      "catalog-data-product-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface",
        "properties": {
          "website_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "category_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-link-interface"
            }
          },
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-discount-interface"
            }
          },
          "bundle_product_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bundle-data-option-interface"
            }
          },
          "stock_item": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
          },
          "downloadable_product_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-data-link-interface"
            }
          },
          "downloadable_product_samples": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/downloadable-data-sample-interface"
            }
          },
          "giftcard_amounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gift-card-data-giftcard-amount-interface"
            }
          },
          "configurable_product_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-option-interface"
            }
          },
          "configurable_product_links": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "catalog-data-category-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "position": {
            "type": "integer"
          },
          "category_id": {
            "type": "string",
            "description": "Category id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-link-extension-interface"
          }
        },
        "required": [
          "category_id"
        ]
      },
      "catalog-data-category-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryLinkInterface"
      },
      "catalog-inventory-data-stock-item-interface": {
        "type": "object",
        "description": "Interface StockItem",
        "properties": {
          "item_id": {
            "type": "integer"
          },
          "product_id": {
            "type": "integer"
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock identifier"
          },
          "qty": {
            "type": "number"
          },
          "is_in_stock": {
            "type": "boolean",
            "description": "Stock Availability"
          },
          "is_qty_decimal": {
            "type": "boolean"
          },
          "show_default_notification_message": {
            "type": "boolean"
          },
          "use_config_min_qty": {
            "type": "boolean"
          },
          "min_qty": {
            "type": "number",
            "description": "Minimal quantity available for item status in stock"
          },
          "use_config_min_sale_qty": {
            "type": "integer"
          },
          "min_sale_qty": {
            "type": "number",
            "description": "Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation"
          },
          "use_config_max_sale_qty": {
            "type": "boolean"
          },
          "max_sale_qty": {
            "type": "number",
            "description": "Maximum Qty Allowed in Shopping Cart data wrapper"
          },
          "use_config_backorders": {
            "type": "boolean"
          },
          "backorders": {
            "type": "integer",
            "description": "Backorders status"
          },
          "use_config_notify_stock_qty": {
            "type": "boolean"
          },
          "notify_stock_qty": {
            "type": "number",
            "description": "Notify for Quantity Below data wrapper"
          },
          "use_config_qty_increments": {
            "type": "boolean"
          },
          "qty_increments": {
            "type": "number",
            "description": "Quantity Increments data wrapper"
          },
          "use_config_enable_qty_inc": {
            "type": "boolean"
          },
          "enable_qty_increments": {
            "type": "boolean",
            "description": "Whether Quantity Increments is enabled"
          },
          "use_config_manage_stock": {
            "type": "boolean"
          },
          "manage_stock": {
            "type": "boolean",
            "description": "Can Manage Stock"
          },
          "low_stock_date": {
            "type": "string"
          },
          "is_decimal_divided": {
            "type": "boolean"
          },
          "stock_status_changed_auto": {
            "type": "integer"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-extension-interface"
          }
        },
        "required": [
          "qty",
          "is_in_stock",
          "is_qty_decimal",
          "show_default_notification_message",
          "use_config_min_qty",
          "min_qty",
          "use_config_min_sale_qty",
          "min_sale_qty",
          "use_config_max_sale_qty",
          "max_sale_qty",
          "use_config_backorders",
          "backorders",
          "use_config_notify_stock_qty",
          "notify_stock_qty",
          "use_config_qty_increments",
          "qty_increments",
          "use_config_enable_qty_inc",
          "enable_qty_increments",
          "use_config_manage_stock",
          "manage_stock",
          "low_stock_date",
          "is_decimal_divided",
          "stock_status_changed_auto"
        ]
      },
      "catalog-inventory-data-stock-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockItemInterface"
      },
      "catalog-data-product-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "link_type": {
            "type": "string",
            "description": "Link type"
          },
          "linked_product_sku": {
            "type": "string",
            "description": "Linked product sku"
          },
          "linked_product_type": {
            "type": "string",
            "description": "Linked product type (simple, virtual, etc)"
          },
          "position": {
            "type": "integer",
            "description": "Linked item position"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-extension-interface"
          }
        },
        "required": [
          "sku",
          "link_type",
          "linked_product_sku",
          "linked_product_type",
          "position"
        ]
      },
      "catalog-data-product-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkInterface",
        "properties": {
          "qty": {
            "type": "number"
          }
        }
      },
      "catalog-data-product-custom-option-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "product_sku": {
            "type": "string",
            "description": "Product SKU"
          },
          "option_id": {
            "type": "integer",
            "description": "Option id"
          },
          "title": {
            "type": "string",
            "description": "Option title"
          },
          "type": {
            "type": "string",
            "description": "Option type"
          },
          "sort_order": {
            "type": "integer",
            "description": "Sort order"
          },
          "is_require": {
            "type": "boolean",
            "description": "Is require"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "price_type": {
            "type": "string",
            "description": "Price type"
          },
          "sku": {
            "type": "string",
            "description": "Sku"
          },
          "file_extension": {
            "type": "string",
            "description": "File extension"
          },
          "max_characters": {
            "type": "integer",
            "description": "Max characters"
          },
          "image_size_x": {
            "type": "integer",
            "description": "Image x size"
          },
          "image_size_y": {
            "type": "integer",
            "description": "Image Y size"
          },
          "values": {
            "type": "array",
            "description": "Values",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-custom-option-values-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-custom-option-extension-interface"
          }
        },
        "required": [
          "product_sku",
          "title",
          "type",
          "sort_order",
          "is_require"
        ]
      },
      "catalog-data-product-custom-option-values-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "title": {
            "type": "string",
            "description": "Option title"
          },
          "sort_order": {
            "type": "integer",
            "description": "Sort order"
          },
          "price": {
            "type": "number",
            "description": "Price"
          },
          "price_type": {
            "type": "string",
            "description": "Price type"
          },
          "sku": {
            "type": "string",
            "description": "Sku"
          },
          "option_type_id": {
            "type": "integer",
            "description": "Option type id"
          }
        },
        "required": [
          "title",
          "sort_order",
          "price",
          "price_type"
        ]
      },
      "catalog-data-product-custom-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionInterface"
      },
      "catalog-data-product-attribute-media-gallery-entry-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Gallery entry ID"
          },
          "media_type": {
            "type": "string",
            "description": "Media type"
          },
          "label": {
            "type": "string",
            "description": "Gallery entry alternative text"
          },
          "position": {
            "type": "integer",
            "description": "Gallery entry position (sort order)"
          },
          "disabled": {
            "type": "boolean",
            "description": "If gallery entry is hidden from product page"
          },
          "types": {
            "type": "array",
            "description": "Gallery entry image types (thumbnail, image, small_image etc)",
            "items": {
              "type": "string"
            }
          },
          "file": {
            "type": "string",
            "description": "File path"
          },
          "content": {
            "$ref": "#/components/schemas/framework-data-image-content-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-attribute-media-gallery-entry-extension-interface"
          }
        },
        "required": [
          "media_type",
          "label",
          "position",
          "disabled",
          "types"
        ]
      },
      "catalog-data-product-attribute-media-gallery-entry-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeMediaGalleryEntryInterface",
        "properties": {
          "video_content": {
            "$ref": "#/components/schemas/framework-data-video-content-interface"
          }
        }
      },
      "catalog-data-product-tier-price-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "customer_group_id": {
            "type": "integer",
            "description": "Customer group id"
          },
          "qty": {
            "type": "number",
            "description": "Tier qty"
          },
          "value": {
            "type": "number",
            "description": "Price value"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-tier-price-extension-interface"
          }
        },
        "required": [
          "customer_group_id",
          "qty",
          "value"
        ]
      },
      "catalog-data-product-tier-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTierPriceInterface",
        "properties": {
          "percentage_value": {
            "type": "number"
          },
          "website_id": {
            "type": "integer"
          }
        }
      },
      "catalog-data-product-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "catalog-data-product-attribute-type-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value"
          },
          "label": {
            "type": "string",
            "description": "Type label"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-attribute-type-extension-interface"
          }
        },
        "required": [
          "value",
          "label"
        ]
      },
      "catalog-data-product-attribute-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductAttributeTypeInterface"
      },
      "catalog-data-product-attribute-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/eav-data-attribute-extension-interface"
          },
          "is_wysiwyg_enabled": {
            "type": "boolean",
            "description": "WYSIWYG flag"
          },
          "is_html_allowed_on_front": {
            "type": "boolean",
            "description": "The HTML tags are allowed on the frontend"
          },
          "used_for_sort_by": {
            "type": "boolean",
            "description": "It is used for sorting in product listing"
          },
          "is_filterable": {
            "type": "boolean",
            "description": "It used in layered navigation"
          },
          "is_filterable_in_search": {
            "type": "boolean",
            "description": "It is used in search results layered navigation"
          },
          "is_used_in_grid": {
            "type": "boolean",
            "description": "It is used in catalog product grid"
          },
          "is_visible_in_grid": {
            "type": "boolean",
            "description": "It is visible in catalog product grid"
          },
          "is_filterable_in_grid": {
            "type": "boolean",
            "description": "It is filterable in catalog product grid"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "apply_to": {
            "type": "array",
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            }
          },
          "is_searchable": {
            "type": "string",
            "description": "The attribute can be used in Quick Search"
          },
          "is_visible_in_advanced_search": {
            "type": "string",
            "description": "The attribute can be used in Advanced Search"
          },
          "is_comparable": {
            "type": "string",
            "description": "The attribute can be compared on the frontend"
          },
          "is_used_for_promo_rules": {
            "type": "string",
            "description": "The attribute can be used for promo rules"
          },
          "is_visible_on_front": {
            "type": "string",
            "description": "The attribute is visible on the frontend"
          },
          "used_in_product_listing": {
            "type": "string",
            "description": "The attribute can be used in product listing"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Attribute is visible on frontend."
          },
          "scope": {
            "type": "string",
            "description": "Attribute scope"
          },
          "attribute_id": {
            "type": "integer",
            "description": "Id of the attribute."
          },
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          },
          "frontend_input": {
            "type": "string",
            "description": "HTML for input element."
          },
          "entity_type_id": {
            "type": "string",
            "description": "Entity type id"
          },
          "is_required": {
            "type": "boolean",
            "description": "Attribute is required."
          },
          "options": {
            "type": "array",
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-interface"
            }
          },
          "is_user_defined": {
            "type": "boolean",
            "description": "Current attribute has been defined by a user."
          },
          "default_frontend_label": {
            "type": "string",
            "description": "Frontend label for default store"
          },
          "frontend_labels": {
            "type": "array",
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-frontend-label-interface"
            }
          },
          "note": {
            "type": "string",
            "description": "The note attribute for the element."
          },
          "backend_type": {
            "type": "string",
            "description": "Backend type."
          },
          "backend_model": {
            "type": "string",
            "description": "Backend model"
          },
          "source_model": {
            "type": "string",
            "description": "Source model"
          },
          "default_value": {
            "type": "string",
            "description": "Default value for the element."
          },
          "is_unique": {
            "type": "string",
            "description": "This is a unique attribute"
          },
          "frontend_class": {
            "type": "string",
            "description": "Frontend class of attribute"
          },
          "validation_rules": {
            "type": "array",
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-validation-rule-interface"
            }
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ]
      },
      "catalog-data-product-attribute-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-attribute-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "catalog-data-category-attribute-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "is_wysiwyg_enabled": {
            "type": "boolean",
            "description": "WYSIWYG flag"
          },
          "is_html_allowed_on_front": {
            "type": "boolean",
            "description": "The HTML tags are allowed on the frontend"
          },
          "used_for_sort_by": {
            "type": "boolean",
            "description": "It is used for sorting in product listing"
          },
          "is_filterable": {
            "type": "boolean",
            "description": "It used in layered navigation"
          },
          "is_filterable_in_search": {
            "type": "boolean",
            "description": "It is used in search results layered navigation"
          },
          "is_used_in_grid": {
            "type": "boolean",
            "description": "It is used in catalog product grid"
          },
          "is_visible_in_grid": {
            "type": "boolean",
            "description": "It is visible in catalog product grid"
          },
          "is_filterable_in_grid": {
            "type": "boolean",
            "description": "It is filterable in catalog product grid"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "apply_to": {
            "type": "array",
            "description": "Apply to value for the element",
            "items": {
              "type": "string"
            }
          },
          "is_searchable": {
            "type": "string",
            "description": "The attribute can be used in Quick Search"
          },
          "is_visible_in_advanced_search": {
            "type": "string",
            "description": "The attribute can be used in Advanced Search"
          },
          "is_comparable": {
            "type": "string",
            "description": "The attribute can be compared on the frontend"
          },
          "is_used_for_promo_rules": {
            "type": "string",
            "description": "The attribute can be used for promo rules"
          },
          "is_visible_on_front": {
            "type": "string",
            "description": "The attribute is visible on the frontend"
          },
          "used_in_product_listing": {
            "type": "string",
            "description": "The attribute can be used in product listing"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Attribute is visible on frontend."
          },
          "scope": {
            "type": "string",
            "description": "Attribute scope"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-eav-attribute-extension-interface"
          },
          "attribute_id": {
            "type": "integer",
            "description": "Id of the attribute."
          },
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          },
          "frontend_input": {
            "type": "string",
            "description": "HTML for input element."
          },
          "entity_type_id": {
            "type": "string",
            "description": "Entity type id"
          },
          "is_required": {
            "type": "boolean",
            "description": "Attribute is required."
          },
          "options": {
            "type": "array",
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-option-interface"
            }
          },
          "is_user_defined": {
            "type": "boolean",
            "description": "Current attribute has been defined by a user."
          },
          "default_frontend_label": {
            "type": "string",
            "description": "Frontend label for default store"
          },
          "frontend_labels": {
            "type": "array",
            "description": "Frontend label for each store",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-frontend-label-interface"
            }
          },
          "note": {
            "type": "string",
            "description": "The note attribute for the element."
          },
          "backend_type": {
            "type": "string",
            "description": "Backend type."
          },
          "backend_model": {
            "type": "string",
            "description": "Backend model"
          },
          "source_model": {
            "type": "string",
            "description": "Source model"
          },
          "default_value": {
            "type": "string",
            "description": "Default value for the element."
          },
          "is_unique": {
            "type": "string",
            "description": "This is a unique attribute"
          },
          "frontend_class": {
            "type": "string",
            "description": "Frontend class of attribute"
          },
          "validation_rules": {
            "type": "array",
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/eav-data-attribute-validation-rule-interface"
            }
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "attribute_code",
          "frontend_input",
          "entity_type_id",
          "is_required",
          "frontend_labels"
        ]
      },
      "catalog-data-category-attribute-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Attributes list.",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-attribute-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "catalog-data-product-type-interface": {
        "type": "object",
        "description": "Product type details",
        "properties": {
          "name": {
            "type": "string",
            "description": "Product type code"
          },
          "label": {
            "type": "string",
            "description": "Product type label"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-type-extension-interface"
          }
        },
        "required": [
          "name",
          "label"
        ]
      },
      "catalog-data-product-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductTypeInterface"
      },
      "catalog-data-tier-price-interface": {
        "type": "object",
        "description": "Tier price interface.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Tier price."
          },
          "price_type": {
            "type": "string",
            "description": "Tier price type."
          },
          "website_id": {
            "type": "integer",
            "description": "Website id."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "customer_group": {
            "type": "string",
            "description": "Customer group."
          },
          "quantity": {
            "type": "number",
            "description": "Quantity."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-tier-price-extension-interface"
          }
        },
        "required": [
          "price",
          "price_type",
          "website_id",
          "sku",
          "customer_group",
          "quantity"
        ]
      },
      "catalog-data-tier-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\TierPriceInterface"
      },
      "catalog-data-price-update-result-interface": {
        "type": "object",
        "description": "Interface returned in case of incorrect price passed to efficient price API.",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message, that contains description of error occurred during price update."
          },
          "parameters": {
            "type": "array",
            "description": "Parameters, that could be displayed in error message placeholders.",
            "items": {
              "type": "string"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-price-update-result-extension-interface"
          }
        },
        "required": [
          "message",
          "parameters"
        ]
      },
      "catalog-data-price-update-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface"
      },
      "catalog-data-base-price-interface": {
        "type": "object",
        "description": "Price interface.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price."
          },
          "store_id": {
            "type": "integer",
            "description": "Store id."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-base-price-extension-interface"
          }
        },
        "required": [
          "price",
          "store_id",
          "sku"
        ]
      },
      "catalog-data-base-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\BasePriceInterface"
      },
      "catalog-data-cost-interface": {
        "type": "object",
        "description": "Cost interface.",
        "properties": {
          "cost": {
            "type": "number",
            "description": "Cost value."
          },
          "store_id": {
            "type": "integer",
            "description": "Store id."
          },
          "sku": {
            "type": "string",
            "description": "SKU."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-cost-extension-interface"
          }
        },
        "required": [
          "cost",
          "store_id",
          "sku"
        ]
      },
      "catalog-data-cost-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CostInterface"
      },
      "catalog-data-special-price-interface": {
        "type": "object",
        "description": "Product Special Price Interface is used to encapsulate data that can be processed by efficient price API.",
        "properties": {
          "price": {
            "type": "number",
            "description": "Product special price value."
          },
          "store_id": {
            "type": "integer",
            "description": "ID of store, that contains special price value."
          },
          "sku": {
            "type": "string",
            "description": "SKU of product, that contains special price value."
          },
          "price_from": {
            "type": "string",
            "description": "Start date for special price in Y-m-d H:i:s format."
          },
          "price_to": {
            "type": "string",
            "description": "End date for special price in Y-m-d H:i:s format."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-special-price-extension-interface"
          }
        },
        "required": [
          "price",
          "store_id",
          "sku",
          "price_from",
          "price_to"
        ]
      },
      "catalog-data-special-price-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\SpecialPriceInterface"
      },
      "catalog-data-category-interface": {
        "type": "object",
        "description": "Category data interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Category id."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent category ID"
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether category is active"
          },
          "position": {
            "type": "integer",
            "description": "Category position"
          },
          "level": {
            "type": "integer",
            "description": "Category level"
          },
          "children": {
            "type": "string",
            "description": "Children ids comma separated."
          },
          "created_at": {
            "type": "string",
            "description": "Category creation date and time."
          },
          "updated_at": {
            "type": "string",
            "description": "Category last update date and time."
          },
          "path": {
            "type": "string",
            "description": "Category full path."
          },
          "available_sort_by": {
            "type": "array",
            "description": "Available sort by for category.",
            "items": {
              "type": "string"
            }
          },
          "include_in_menu": {
            "type": "boolean",
            "description": "Category is included in menu."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        }
      },
      "catalog-data-category-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface"
      },
      "catalog-data-category-tree-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent category ID"
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether category is active"
          },
          "position": {
            "type": "integer",
            "description": "Category position"
          },
          "level": {
            "type": "integer",
            "description": "Category level"
          },
          "product_count": {
            "type": "integer",
            "description": "Product count"
          },
          "children_data": {
            "type": "array",
            "description": "Children Data",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-tree-interface"
            }
          }
        },
        "required": [
          "parent_id",
          "name",
          "is_active",
          "position",
          "level",
          "product_count",
          "children_data"
        ]
      },
      "catalog-data-category-search-results-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "items": {
            "type": "array",
            "description": "Categories",
            "items": {
              "$ref": "#/components/schemas/catalog-data-category-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "catalog-data-product-custom-option-type-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "label": {
            "type": "string",
            "description": "Option type label"
          },
          "code": {
            "type": "string",
            "description": "Option type code"
          },
          "group": {
            "type": "string",
            "description": "Option type group"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-custom-option-type-extension-interface"
          }
        },
        "required": [
          "label",
          "code",
          "group"
        ]
      },
      "catalog-data-product-custom-option-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductCustomOptionTypeInterface"
      },
      "catalog-data-product-link-type-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Link type code"
          },
          "name": {
            "type": "string",
            "description": "Link type name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-type-extension-interface"
          }
        },
        "required": [
          "code",
          "name"
        ]
      },
      "catalog-data-product-link-type-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkTypeInterface"
      },
      "catalog-data-product-link-attribute-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "string",
            "description": "Attribute code"
          },
          "type": {
            "type": "string",
            "description": "Attribute type"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-link-attribute-extension-interface"
          }
        },
        "required": [
          "code",
          "type"
        ]
      },
      "catalog-data-product-link-attribute-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductLinkAttributeInterface"
      },
      "catalog-data-category-product-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "sku": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "category_id": {
            "type": "string",
            "description": "Category id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-category-product-link-extension-interface"
          }
        },
        "required": [
          "category_id"
        ]
      },
      "catalog-data-category-product-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface"
      },
      "catalog-data-product-website-link-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "sku": {
            "type": "string"
          },
          "website_id": {
            "type": "integer",
            "description": "Website ids"
          }
        },
        "required": [
          "sku",
          "website_id"
        ]
      },
      "catalog-data-product-render-search-results-interface": {
        "type": "object",
        "description": "Dto that holds render information about products",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of products rendered information",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-render-interface"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "catalog-data-product-render-interface": {
        "type": "object",
        "description": "Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data",
        "properties": {
          "add_to_cart_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "add_to_compare_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "price_info": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-interface"
          },
          "images": {
            "type": "array",
            "description": "Enough information, that needed to render image on front",
            "items": {
              "$ref": "#/components/schemas/catalog-data-product-render-image-interface"
            }
          },
          "url": {
            "type": "string",
            "description": "Product url"
          },
          "id": {
            "type": "integer",
            "description": "Product identifier"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "type": {
            "type": "string",
            "description": "Product type. Such as bundle, grouped, simple, etc..."
          },
          "is_salable": {
            "type": "string",
            "description": "Information about product saleability (In Stock)"
          },
          "store_id": {
            "type": "integer",
            "description": "Information about current store id or requested store id"
          },
          "currency_code": {
            "type": "string",
            "description": "Current or desired currency code to product"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-extension-interface"
          }
        },
        "required": [
          "add_to_cart_button",
          "add_to_compare_button",
          "price_info",
          "images",
          "url",
          "id",
          "name",
          "type",
          "is_salable",
          "store_id",
          "currency_code",
          "extension_attributes"
        ]
      },
      "catalog-data-product-render-button-interface": {
        "type": "object",
        "description": "Button interface. This interface represents all manner of product buttons: add to cart, add to compare, etc... The buttons describes by this interface should have interaction with backend",
        "properties": {
          "post_data": {
            "type": "string",
            "description": "Post data"
          },
          "url": {
            "type": "string",
            "description": "Url, needed to add product to cart"
          },
          "required_options": {
            "type": "boolean",
            "description": "Flag whether a product has options or not"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-extension-interface"
          }
        },
        "required": [
          "post_data",
          "url",
          "required_options"
        ]
      },
      "catalog-data-product-render-button-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ButtonInterface"
      },
      "catalog-data-product-render-price-info-interface": {
        "type": "object",
        "description": "Price interface.",
        "properties": {
          "final_price": {
            "type": "number",
            "description": "Final price"
          },
          "max_price": {
            "type": "number",
            "description": "Max price of a product"
          },
          "max_regular_price": {
            "type": "number",
            "description": "Max regular price"
          },
          "minimal_regular_price": {
            "type": "number",
            "description": "Minimal regular price"
          },
          "special_price": {
            "type": "number",
            "description": "Special price"
          },
          "minimal_price": {
            "type": "number",
            "description": "Minimal price"
          },
          "regular_price": {
            "type": "number",
            "description": "Regular price"
          },
          "formatted_prices": {
            "$ref": "#/components/schemas/catalog-data-product-render-formatted-price-info-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-extension-interface"
          }
        },
        "required": [
          "final_price",
          "max_price",
          "max_regular_price",
          "minimal_regular_price",
          "special_price",
          "minimal_price",
          "regular_price",
          "formatted_prices"
        ]
      },
      "catalog-data-product-render-formatted-price-info-interface": {
        "type": "object",
        "description": "Formatted Price interface. Aggregate formatted html with price representations. E.g.: <span class=\"price\">$9.00</span> Consider currency, rounding and html",
        "properties": {
          "final_price": {
            "type": "string",
            "description": "Html with final price"
          },
          "max_price": {
            "type": "string",
            "description": "Max price of a product"
          },
          "minimal_price": {
            "type": "string",
            "description": "The minimal price of the product or variation"
          },
          "max_regular_price": {
            "type": "string",
            "description": "Max regular price"
          },
          "minimal_regular_price": {
            "type": "string",
            "description": "Minimal regular price"
          },
          "special_price": {
            "type": "string",
            "description": "Special price"
          },
          "regular_price": {
            "type": "string",
            "description": "Price - is price of product without discounts and special price with taxes and fixed product tax"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-formatted-price-info-extension-interface"
          }
        },
        "required": [
          "final_price",
          "max_price",
          "minimal_price",
          "max_regular_price",
          "minimal_regular_price",
          "special_price",
          "regular_price"
        ]
      },
      "catalog-data-product-render-formatted-price-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\FormattedPriceInfoInterface"
      },
      "catalog-data-product-render-price-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\PriceInfoInterface",
        "properties": {
          "msrp": {
            "$ref": "#/components/schemas/msrp-data-product-render-msrp-price-info-interface"
          },
          "tax_adjustments": {
            "$ref": "#/components/schemas/catalog-data-product-render-price-info-interface"
          },
          "weee_attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/weee-data-product-render-weee-adjustment-attribute-interface"
            }
          },
          "weee_adjustment": {
            "type": "string"
          }
        }
      },
      "catalog-data-product-render-image-interface": {
        "type": "object",
        "description": "Product Render image interface. Represents physical characteristics of image, that can be used in product listing or product view",
        "properties": {
          "url": {
            "type": "string",
            "description": "Image url"
          },
          "code": {
            "type": "string",
            "description": "Image code"
          },
          "height": {
            "type": "number",
            "description": "Image height"
          },
          "width": {
            "type": "number",
            "description": "Image width in px"
          },
          "label": {
            "type": "string",
            "description": "Image label"
          },
          "resized_width": {
            "type": "number",
            "description": "Resize width"
          },
          "resized_height": {
            "type": "number",
            "description": "Resize height"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-render-image-extension-interface"
          }
        },
        "required": [
          "url",
          "code",
          "height",
          "width",
          "label",
          "resized_width",
          "resized_height"
        ]
      },
      "catalog-data-product-render-image-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRender\\ImageInterface"
      },
      "catalog-data-product-render-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductRenderInterface",
        "properties": {
          "wishlist_button": {
            "$ref": "#/components/schemas/catalog-data-product-render-button-interface"
          },
          "review_html": {
            "type": "string"
          }
        }
      },
      "catalog-data-custom-option-interface": {
        "type": "object",
        "description": "Interface CustomOptionInterface",
        "properties": {
          "option_id": {
            "type": "string",
            "description": "Option id"
          },
          "option_value": {
            "type": "string",
            "description": "Option value"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-custom-option-extension-interface"
          }
        },
        "required": [
          "option_id",
          "option_value"
        ]
      },
      "catalog-data-custom-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CustomOptionInterface",
        "properties": {
          "file_info": {
            "$ref": "#/components/schemas/framework-data-image-content-interface"
          }
        }
      },
      "catalog-data-product-option-interface": {
        "type": "object",
        "description": "Product option interface",
        "properties": {
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-data-product-option-extension-interface"
          }
        }
      },
      "catalog-data-product-option-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductOptionInterface",
        "properties": {
          "custom_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/catalog-data-custom-option-interface"
            }
          },
          "bundle_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bundle-data-bundle-option-interface"
            }
          },
          "downloadable_option": {
            "$ref": "#/components/schemas/downloadable-data-downloadable-option-interface"
          },
          "giftcard_item_option": {
            "$ref": "#/components/schemas/gift-card-data-gift-card-option-interface"
          },
          "configurable_item_options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/configurable-product-data-configurable-item-option-value-interface"
            }
          }
        }
      },
      "catalog-inventory-data-stock-item-collection-interface": {
        "type": "object",
        "description": "Interface StockItemCollectionInterface",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/catalog-inventory-stock-item-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "catalog-inventory-data-stock-status-interface": {
        "type": "object",
        "description": "Interface StockStatusInterface",
        "properties": {
          "product_id": {
            "type": "integer"
          },
          "stock_id": {
            "type": "integer"
          },
          "qty": {
            "type": "integer"
          },
          "stock_status": {
            "type": "integer"
          },
          "stock_item": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-item-interface"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/catalog-inventory-data-stock-status-extension-interface"
          }
        },
        "required": [
          "product_id",
          "stock_id",
          "qty",
          "stock_status",
          "stock_item"
        ]
      },
      "catalog-inventory-data-stock-status-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockStatusInterface"
      },
      "inventory-api-data-source-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "Sources list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-source-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "inventory-api-data-source-interface": {
        "type": "object",
        "description": "Represents physical storage, i.e. brick and mortar store or warehouse Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "name": {
            "type": "string",
            "description": "Source name"
          },
          "email": {
            "type": "string",
            "description": "Source email"
          },
          "contact_name": {
            "type": "string",
            "description": "Source contact name"
          },
          "enabled": {
            "type": "boolean",
            "description": "If source is enabled. For new entity can be null"
          },
          "description": {
            "type": "string",
            "description": "Source description"
          },
          "latitude": {
            "type": "number",
            "description": "Source latitude"
          },
          "longitude": {
            "type": "number",
            "description": "Source longitude"
          },
          "country_id": {
            "type": "string",
            "description": "Source country id"
          },
          "region_id": {
            "type": "integer",
            "description": "Region id if source has registered region."
          },
          "region": {
            "type": "string",
            "description": "Region title if source has custom region"
          },
          "city": {
            "type": "string",
            "description": "Source city"
          },
          "street": {
            "type": "string",
            "description": "Source street name"
          },
          "postcode": {
            "type": "string",
            "description": "Source post code"
          },
          "phone": {
            "type": "string",
            "description": "Source phone number"
          },
          "fax": {
            "type": "string",
            "description": "Source fax"
          },
          "use_default_carrier_config": {
            "type": "boolean",
            "description": "Is need to use default config"
          },
          "carrier_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-source-carrier-link-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-source-extension-interface"
          }
        }
      },
      "inventory-api-data-source-carrier-link-interface": {
        "type": "object",
        "description": "Represents relation between some physical storage and shipping method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "carrier_code": {
            "type": "string",
            "description": "Carrier code"
          },
          "position": {
            "type": "integer",
            "description": "Position"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-source-carrier-link-extension-interface"
          }
        }
      },
      "inventory-api-data-source-carrier-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceCarrierLinkInterface"
      },
      "inventory-api-data-source-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceInterface",
        "properties": {
          "is_pickup_location_active": {
            "type": "boolean"
          },
          "frontend_name": {
            "type": "string"
          },
          "frontend_description": {
            "type": "string"
          }
        }
      },
      "inventory-api-data-stock-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "Stocks list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-stock-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "inventory-api-data-stock-interface": {
        "type": "object",
        "description": "Represents product aggregation among some different physical storages (in technical words, it is an index) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "stock_id": {
            "type": "integer",
            "description": "Stock id"
          },
          "name": {
            "type": "string",
            "description": "Stock name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-stock-extension-interface"
          }
        }
      },
      "inventory-api-data-stock-extension-interface": {
        "type": "object",
        "description": "TODO: temporal fix of extension classes generation during installation ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\StockInterface",
        "properties": {
          "sales_channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-sales-api-data-sales-channel-interface"
            }
          }
        }
      },
      "inventory-sales-api-data-sales-channel-interface": {
        "type": "object",
        "description": "Represents sales channels (which are a linkage between stocks and websites, customer groups, etc.) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "type": {
            "type": "string",
            "description": "Sales channel type"
          },
          "code": {
            "type": "string",
            "description": "Sales channel code"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-sales-channel-extension-interface"
          }
        }
      },
      "inventory-sales-api-data-sales-channel-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\SalesChannelInterface"
      },
      "inventory-api-data-stock-source-link-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "StockSourceLink list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-stock-source-link-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "inventory-api-data-stock-source-link-interface": {
        "type": "object",
        "description": "Represents relation between Stock and Source entities. Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "stock_id": {
            "type": "integer",
            "description": "Stock id"
          },
          "source_code": {
            "type": "string",
            "description": "Source code of the link"
          },
          "priority": {
            "type": "integer",
            "description": "Priority of the link"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-stock-source-link-extension-interface"
          }
        }
      },
      "inventory-api-data-stock-source-link-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\StockSourceLinkInterface",
        "properties": {
          "source_name": {
            "type": "string"
          }
        }
      },
      "inventory-api-data-source-item-search-results-interface": {
        "type": "object",
        "description": "Search results of Repository::getList method Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "items": {
            "type": "array",
            "description": "Source items list",
            "items": {
              "$ref": "#/components/schemas/inventory-api-data-source-item-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "inventory-api-data-source-item-interface": {
        "type": "object",
        "description": "Represents amount of product on physical storage Entity id getter is missed because entity identifies by compound identifier (sku and source_code) Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Source item sku"
          },
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "quantity": {
            "type": "number",
            "description": "Source item quantity"
          },
          "status": {
            "type": "integer",
            "description": "Source item status (One of self::STATUS_*)"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-api-data-source-item-extension-interface"
          }
        }
      },
      "inventory-api-data-source-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryApi\\Api\\Data\\SourceItemInterface"
      },
      "inventory-catalog-api-data-partial-inventory-transfer-item-interface": {
        "type": "object",
        "description": "Specifies item and quantity for partial inventory transfer.",
        "properties": {
          "sku": {
            "type": "string"
          },
          "qty": {
            "type": "number"
          }
        },
        "required": [
          "sku",
          "qty"
        ]
      },
      "inventory-distance-based-source-selection-api-data-lat-lng-interface": {
        "type": "object",
        "description": "DTO for latitude and longitude request",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude"
          },
          "lng": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "inventory-export-stock-api-data-export-stock-salable-qty-search-result-interface": {
        "type": "object",
        "description": "Interface for ExportStockSalableQtySearchResult",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/framework-extensible-data-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "inventory-export-stock-api-data-product-stock-index-data-interface": {
        "type": "object",
        "description": "Class ExportStockIndexDataResultInterface for result Inventory stock index dump export",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product SKU"
          },
          "qty": {
            "type": "number",
            "description": "Product QTY"
          },
          "is_salable": {
            "type": "boolean",
            "description": "Product is salable flag"
          }
        },
        "required": [
          "sku",
          "qty",
          "is_salable"
        ]
      },
      "inventory-sales-api-data-is-product-salable-result-interface": {
        "type": "object",
        "description": "Represents \"is product salable\" result interface.",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product sku from result."
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock id from result."
          },
          "salable": {
            "type": "boolean",
            "description": "Is salable result."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-result-extension-interface"
          }
        },
        "required": [
          "sku",
          "stock_id",
          "salable"
        ]
      },
      "inventory-sales-api-data-is-product-salable-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\IsProductSalableResultInterface"
      },
      "inventory-sales-api-data-product-salable-result-interface": {
        "type": "object",
        "description": "Represents result of service Magento\\InventorySalesApi\\Api\\IsProductSalableForRequestedQtyInterface::execute",
        "properties": {
          "salable": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-sales-api-data-product-salability-error-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-product-salable-result-extension-interface"
          }
        },
        "required": [
          "salable",
          "errors"
        ]
      },
      "inventory-sales-api-data-product-salability-error-interface": {
        "type": "object",
        "description": "",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-product-salability-error-extension-interface"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "inventory-sales-api-data-product-salability-error-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\ProductSalabilityErrorInterface"
      },
      "inventory-sales-api-data-product-salable-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\ProductSalableResultInterface"
      },
      "inventory-sales-api-data-is-product-salable-for-requested-qty-result-interface": {
        "type": "object",
        "description": "Represents \"is product salable for requested quantity\" result interface.",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product sku from result."
          },
          "stock_id": {
            "type": "integer",
            "description": "Stock id from result."
          },
          "salable": {
            "type": "boolean",
            "description": "Is salable result."
          },
          "errors": {
            "type": "array",
            "description": "Errors from result.",
            "items": {
              "$ref": "#/components/schemas/inventory-sales-api-data-product-salability-error-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface"
          }
        },
        "required": [
          "sku",
          "stock_id",
          "salable",
          "errors"
        ]
      },
      "inventory-sales-api-data-is-product-salable-for-requested-qty-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySalesApi\\Api\\Data\\IsProductSalableForRequestedQtyResultInterface"
      },
      "inventory-in-store-pickup-api-data-search-result-interface": {
        "type": "object",
        "description": "Search results for providing pickup locations.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Items list.",
            "items": {
              "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-pickup-location-interface"
            }
          },
          "search_request": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_request",
          "total_count"
        ]
      },
      "inventory-in-store-pickup-api-data-pickup-location-interface": {
        "type": "object",
        "description": "Represents sources projection on In-Store Pickup context. Realisation must follow immutable DTO concept. Partial immutability done according to restriction of current Extension Attributes implementation.",
        "properties": {
          "pickup_location_code": {
            "type": "string",
            "description": "Source code of Pickup Location."
          },
          "name": {
            "type": "string",
            "description": "Pickup Location name."
          },
          "email": {
            "type": "string",
            "description": "Pickup Location contact email."
          },
          "fax": {
            "type": "string",
            "description": "Fax contact info."
          },
          "contact_name": {
            "type": "string",
            "description": "Pickup Location contact name."
          },
          "description": {
            "type": "string",
            "description": "Pickup Location description."
          },
          "latitude": {
            "type": "number",
            "description": "Pickup Location latitude."
          },
          "longitude": {
            "type": "number",
            "description": "Pickup Location longitude."
          },
          "country_id": {
            "type": "string",
            "description": "Pickup Location country ID."
          },
          "region_id": {
            "type": "integer",
            "description": "Pickup Location region ID."
          },
          "region": {
            "type": "string",
            "description": "Pickup Location region."
          },
          "city": {
            "type": "string",
            "description": "Pickup Location city."
          },
          "street": {
            "type": "string",
            "description": "Pickup Location street."
          },
          "postcode": {
            "type": "string",
            "description": "Pickup Location postcode."
          },
          "phone": {
            "type": "string",
            "description": "Pickup Location phone."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-pickup-location-extension-interface"
          }
        },
        "required": [
          "pickup_location_code"
        ]
      },
      "inventory-in-store-pickup-api-data-pickup-location-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\PickupLocationInterface"
      },
      "inventory-in-store-pickup-api-data-search-request-interface": {
        "type": "object",
        "description": "Endpoint used to search Pickup Locations by different parameters: - by attribute filters fields @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\FiltersInterface - by distance to the address @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\AreaInterface Also, endpoint supports paging and sort orders.",
        "properties": {
          "area": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-area-interface"
          },
          "filters": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filters-interface"
          },
          "page_size": {
            "type": "integer",
            "description": "Page size."
          },
          "current_page": {
            "type": "integer",
            "description": "Current page."
          },
          "scope_type": {
            "type": "string",
            "description": "Sales Channel Type."
          },
          "scope_code": {
            "type": "string",
            "description": "Sales Channel code."
          },
          "sort": {
            "type": "array",
            "description": "Sort Order.",
            "items": {
              "$ref": "#/components/schemas/framework-sort-order"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-extension-interface"
          }
        },
        "required": [
          "current_page",
          "scope_type",
          "scope_code"
        ]
      },
      "inventory-in-store-pickup-api-data-search-request-area-interface": {
        "type": "object",
        "description": "Filter by Distance to the Address. Pickup Locations will be filtered by distance according to the geo-position of the entered address. Required fields for the address are country and one of the field: region or city or postcode.",
        "properties": {
          "radius": {
            "type": "integer",
            "description": "Search radius in KM."
          },
          "search_term": {
            "type": "string",
            "description": "Search term string."
          }
        },
        "required": [
          "radius",
          "search_term"
        ]
      },
      "inventory-in-store-pickup-api-data-search-request-filters-interface": {
        "type": "object",
        "description": "Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \\Magento\\Framework\\Api\\SearchCriteriaInterface",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "postcode": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "region": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "region_id": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "city": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "street": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "name": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          },
          "pickup_location_code": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-filter-interface"
          }
        }
      },
      "inventory-in-store-pickup-api-data-search-request-filter-interface": {
        "type": "object",
        "description": "Filter for Pickup Location search.",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value."
          },
          "condition_type": {
            "type": "string",
            "description": "Condition Type."
          }
        },
        "required": [
          "value",
          "condition_type"
        ]
      },
      "inventory-in-store-pickup-api-data-search-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequestInterface",
        "properties": {
          "products_info": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-product-info-interface"
            }
          }
        }
      },
      "inventory-in-store-pickup-api-data-search-request-product-info-interface": {
        "type": "object",
        "description": "Product Info Data Transfer Object.",
        "properties": {
          "sku": {
            "type": "string",
            "description": "Product SKU."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-api-data-search-request-product-info-extension-interface"
          }
        },
        "required": [
          "sku"
        ]
      },
      "inventory-in-store-pickup-api-data-search-request-product-info-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupApi\\Api\\Data\\SearchRequest\\ProductInfoInterface"
      },
      "inventory-source-selection-api-data-source-selection-algorithm-interface": {
        "type": "object",
        "description": "Data Interface representing particular Source Selection Algorithm",
        "properties": {
          "code": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-algorithm-extension-interface"
          }
        },
        "required": [
          "code",
          "title",
          "description"
        ]
      },
      "inventory-source-selection-api-data-source-selection-algorithm-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionAlgorithmInterface"
      },
      "inventory-source-selection-api-data-inventory-request-interface": {
        "type": "object",
        "description": "Request products in a given Qty and StockId",
        "properties": {
          "stock_id": {
            "type": "integer",
            "description": "Stock Id"
          },
          "items": {
            "type": "array",
            "description": "Items",
            "items": {
              "$ref": "#/components/schemas/inventory-source-selection-api-data-item-request-interface"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-inventory-request-extension-interface"
          }
        },
        "required": [
          "stock_id",
          "items"
        ]
      },
      "inventory-source-selection-api-data-item-request-interface": {
        "type": "object",
        "description": "Represents requested quantity for particular product",
        "properties": {
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "qty": {
            "type": "number",
            "description": "Product Quantity"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-item-request-extension-interface"
          }
        },
        "required": [
          "sku",
          "qty"
        ]
      },
      "inventory-source-selection-api-data-item-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\ItemRequestInterface"
      },
      "inventory-source-selection-api-data-inventory-request-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\InventoryRequestInterface",
        "properties": {
          "destination_address": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-address-interface"
          }
        }
      },
      "inventory-source-selection-api-data-address-interface": {
        "type": "object",
        "description": "Data interface for shipping source or shipping destination",
        "properties": {
          "country": {
            "type": "string",
            "description": "Shipping country"
          },
          "postcode": {
            "type": "string",
            "description": "Shipping postcode"
          },
          "street": {
            "type": "string",
            "description": "Shipping street address"
          },
          "region": {
            "type": "string",
            "description": "Shipping region"
          },
          "city": {
            "type": "string",
            "description": "Shipping city"
          }
        },
        "required": [
          "country",
          "postcode",
          "street",
          "region",
          "city"
        ]
      },
      "inventory-source-selection-api-data-source-selection-result-interface": {
        "type": "object",
        "description": "Result of how we will deduct product qty from different Sources",
        "properties": {
          "source_selection_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-item-interface"
            }
          },
          "shippable": {
            "type": "boolean"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-result-extension-interface"
          }
        },
        "required": [
          "source_selection_items",
          "shippable"
        ]
      },
      "inventory-source-selection-api-data-source-selection-item-interface": {
        "type": "object",
        "description": "Represents source selection result for the specific source and SKU",
        "properties": {
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "sku": {
            "type": "string",
            "description": "Item SKU"
          },
          "qty_to_deduct": {
            "type": "number",
            "description": "Quantity which will be deducted for this source"
          },
          "qty_available": {
            "type": "number",
            "description": "Available quantity for this source"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-source-selection-api-data-source-selection-item-extension-interface"
          }
        },
        "required": [
          "source_code",
          "sku",
          "qty_to_deduct",
          "qty_available"
        ]
      },
      "inventory-source-selection-api-data-source-selection-item-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionItemInterface"
      },
      "inventory-source-selection-api-data-source-selection-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventorySourceSelectionApi\\Api\\Data\\SourceSelectionResultInterface"
      },
      "inventory-in-store-pickup-sales-api-data-result-interface": {
        "type": "object",
        "description": "Operation result object that contains status of the operation.",
        "properties": {
          "successful": {
            "type": "boolean",
            "description": "Operation result successful."
          },
          "errors": {
            "type": "array",
            "description": "Error information for failed operations.",
            "items": {
              "type": "string"
            }
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-in-store-pickup-sales-api-data-result-extension-interface"
          }
        },
        "required": [
          "successful",
          "errors"
        ]
      },
      "inventory-in-store-pickup-sales-api-data-result-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryInStorePickupSalesApi\\Api\\Data\\ResultInterface"
      },
      "inventory-low-quantity-notification-api-data-source-item-configuration-interface": {
        "type": "object",
        "description": "Represents a Source Item Configuration object Used fully qualified namespaces in annotations for proper work of WebApi request parser",
        "properties": {
          "source_code": {
            "type": "string",
            "description": "Source code"
          },
          "notify_stock_qty": {
            "type": "number",
            "description": "Notify stock qty"
          },
          "sku": {
            "type": "string",
            "description": "SKU"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface"
          }
        }
      },
      "inventory-low-quantity-notification-api-data-source-item-configuration-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\InventoryLowQuantityNotificationApi\\Api\\Data\\SourceItemConfigurationInterface"
      }
    }
  }
}