{
  "openapi": "3.0.0",
  "info": {
    "version": "2.4.8",
    "title": "Commerce Admin REST endpoints - Customers Only",
    "description": "Customer-related endpoints and schemas from Adobe Commerce REST API"
  },
  "tags": [
    {
      "name": "addresses/{addressId}"
    },
    {
      "name": "attributeMetadata/customer"
    },
    {
      "name": "attributeMetadata/customer/attribute/{attributeCode}"
    },
    {
      "name": "attributeMetadata/customer/custom"
    },
    {
      "name": "attributeMetadata/customer/form/{formCode}"
    },
    {
      "name": "attributeMetadata/customerAddress"
    },
    {
      "name": "attributeMetadata/customerAddress/attribute/{attributeCode}"
    },
    {
      "name": "attributeMetadata/customerAddress/custom"
    },
    {
      "name": "attributeMetadata/customerAddress/form/{formCode}"
    },
    {
      "name": "carts/{cartId}/billing-address"
    },
    {
      "name": "carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "carts/mine/billing-address"
    },
    {
      "name": "carts/mine/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "customerGroups"
    },
    {
      "name": "customerGroups/{id}"
    },
    {
      "name": "customerGroups/{id}/permissions"
    },
    {
      "name": "customerGroups/default"
    },
    {
      "name": "customerGroups/default/{id}"
    },
    {
      "name": "customerGroups/default/{storeId}"
    },
    {
      "name": "customerGroups/search"
    },
    {
      "name": "customers"
    },
    {
      "name": "customers/{customerId}"
    },
    {
      "name": "customers/{customerId}/billingAddress"
    },
    {
      "name": "customers/{customerId}/carts"
    },
    {
      "name": "customers/{customerId}/companies"
    },
    {
      "name": "customers/{customerId}/companies/{companyId}"
    },
    {
      "name": "customers/{customerId}/confirm"
    },
    {
      "name": "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
    },
    {
      "name": "customers/{customerId}/permissions/readonly"
    },
    {
      "name": "customers/{customerId}/shippingAddress"
    },
    {
      "name": "customers/{email}/activate"
    },
    {
      "name": "customers/addresses/{addressId}"
    },
    {
      "name": "customers/companies"
    },
    {
      "name": "customers/confirm"
    },
    {
      "name": "customers/isEmailAvailable"
    },
    {
      "name": "customers/me"
    },
    {
      "name": "customers/me/activate"
    },
    {
      "name": "customers/me/billingAddress"
    },
    {
      "name": "customers/me/password"
    },
    {
      "name": "customers/me/shippingAddress"
    },
    {
      "name": "customers/password"
    },
    {
      "name": "customers/resetPassword"
    },
    {
      "name": "customers/search"
    },
    {
      "name": "customers/validate"
    },
    {
      "name": "guest-carts/{cartId}/billing-address"
    },
    {
      "name": "integration/customer/revoke-customer-token"
    },
    {
      "name": "integration/customer/token"
    },
    {
      "name": "inventory/get-latlng-from-address"
    },
    {
      "name": "inventory/get-latslngs-from-address"
    },
    {
      "name": "negotiable-carts/{cartId}/billing-address"
    },
    {
      "name": "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
    },
    {
      "name": "negotiableQuote/submitToCustomer"
    },
    {
      "name": "negotiableQuoteTemplate/submitToCustomer"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
    },
    {
      "name": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
    },
    {
      "name": "purchase-order-carts/{cartId}/billing-address"
    },
    {
      "name": "purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id"
    }
  ],
  "paths": {
    "/V1/addresses/{addressId}": {
      "delete": {
        "tags": [
          "addresses/{addressId}"
        ],
        "description": "Delete customer address by ID.",
        "operationId": "DeleteV1AddressesAddressId",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "addresses/{addressId}"
      }
    },
    "/V1/attributeMetadata/customer": {
      "get": {
        "tags": [
          "attributeMetadata/customer"
        ],
        "description": "Get all attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomer",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer"
      }
    },
    "/V1/attributeMetadata/customer/attribute/{attributeCode}": {
      "get": {
        "tags": [
          "attributeMetadata/customer/attribute/{attributeCode}"
        ],
        "description": "Retrieve attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomerAttributeAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer/attribute/{attributeCode}"
      }
    },
    "/V1/attributeMetadata/customer/custom": {
      "get": {
        "tags": [
          "attributeMetadata/customer/custom"
        ],
        "description": "Get custom attributes metadata for the given data interface.",
        "operationId": "GetV1AttributeMetadataCustomerCustom",
        "parameters": [
          {
            "name": "dataInterfaceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer/custom"
      }
    },
    "/V1/attributeMetadata/customer/form/{formCode}": {
      "get": {
        "tags": [
          "attributeMetadata/customer/form/{formCode}"
        ],
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "GetV1AttributeMetadataCustomerFormFormCode",
        "parameters": [
          {
            "name": "formCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customer/form/{formCode}"
      }
    },
    "/V1/attributeMetadata/customerAddress": {
      "get": {
        "tags": [
          "attributeMetadata/customerAddress"
        ],
        "description": "Get all attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomerAddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress"
      }
    },
    "/V1/attributeMetadata/customerAddress/attribute/{attributeCode}": {
      "get": {
        "tags": [
          "attributeMetadata/customerAddress/attribute/{attributeCode}"
        ],
        "description": "Retrieve attribute metadata.",
        "operationId": "GetV1AttributeMetadataCustomerAddressAttributeAttributeCode",
        "parameters": [
          {
            "name": "attributeCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress/attribute/{attributeCode}"
      }
    },
    "/V1/attributeMetadata/customerAddress/custom": {
      "get": {
        "tags": [
          "attributeMetadata/customerAddress/custom"
        ],
        "description": "Get custom attributes metadata for the given data interface.",
        "operationId": "GetV1AttributeMetadataCustomerAddressCustom",
        "parameters": [
          {
            "name": "dataInterfaceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress/custom"
      }
    },
    "/V1/attributeMetadata/customerAddress/form/{formCode}": {
      "get": {
        "tags": [
          "attributeMetadata/customerAddress/form/{formCode}"
        ],
        "description": "Retrieve all attributes filtered by form code",
        "operationId": "GetV1AttributeMetadataCustomerAddressFormFormCode",
        "parameters": [
          {
            "name": "formCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/customer-data-attribute-metadata-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "attributeMetadata/customerAddress/form/{formCode}"
      }
    },
    "/V1/carts/mine/billing-address": {
      "get": {
        "tags": [
          "carts/mine/billing-address"
        ],
        "description": "Returns the billing address for a specified quote.",
        "operationId": "GetV1CartsMineBillingaddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/billing-address"
      },
      "post": {
        "tags": [
          "carts/mine/billing-address"
        ],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1CartsMineBillingaddress",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/billing-address"
      }
    },
    "/V1/carts/mine/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": [
          "carts/mine/estimate-shipping-methods-by-address-id"
        ],
        "description": "Estimate shipping",
        "operationId": "PostV1CartsMineEstimateshippingmethodsbyaddressid",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/mine/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/carts/{cartId}/billing-address": {
      "get": {
        "tags": [
          "carts/{cartId}/billing-address"
        ],
        "description": "Returns the billing address for a specified quote.",
        "operationId": "GetV1CartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/billing-address"
      },
      "post": {
        "tags": [
          "carts/{cartId}/billing-address"
        ],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1CartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/billing-address"
      }
    },
    "/V1/carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": [
          "carts/{cartId}/estimate-shipping-methods-by-address-id"
        ],
        "description": "Estimate shipping",
        "operationId": "PostV1CartsCartIdEstimateshippingmethodsbyaddressid",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "carts/{cartId}/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/customerGroups": {
      "post": {
        "tags": [
          "customerGroups"
        ],
        "description": "Save customer group.",
        "operationId": "PostV1CustomerGroups",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CustomerGroupsPostv1customergroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups"
      }
    },
    "/V1/customerGroups/default": {
      "get": {
        "tags": [
          "customerGroups/default"
        ],
        "description": "Get default customer group.",
        "operationId": "GetV1CustomerGroupsDefault",
        "parameters": [
          {
            "name": "storeId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/default"
      }
    },
    "/V1/customerGroups/default/{id}": {
      "put": {
        "tags": [
          "customerGroups/default/{id}"
        ],
        "description": "Set system default customer group.",
        "operationId": "PutV1CustomerGroupsDefaultId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/default/{id}"
      }
    },
    "/V1/customerGroups/default/{storeId}": {
      "get": {
        "tags": [
          "customerGroups/default/{storeId}"
        ],
        "description": "Get default customer group.",
        "operationId": "GetV1CustomerGroupsDefaultStoreId",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/default/{storeId}"
      }
    },
    "/V1/customerGroups/search": {
      "get": {
        "tags": [
          "customerGroups/search"
        ],
        "description": "Retrieve customer groups. The list of groups can be filtered to exclude the NOT_LOGGED_IN group using the first parameter and/or it can be filtered by tax class. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#GroupRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CustomerGroupsSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/search"
      }
    },
    "/V1/customerGroups/{id}": {
      "get": {
        "tags": [
          "customerGroups/{id}"
        ],
        "description": "Get customer group by group ID.",
        "operationId": "GetV1CustomerGroupsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}"
      },
      "put": {
        "tags": [
          "customerGroups/{id}"
        ],
        "description": "Save customer group.",
        "operationId": "PutV1CustomerGroupsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CustomerGroupsPostv1customergroupsbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}"
      },
      "delete": {
        "tags": [
          "customerGroups/{id}"
        ],
        "description": "Delete customer group by ID.",
        "operationId": "DeleteV1CustomerGroupsId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}"
      }
    },
    "/V1/customerGroups/{id}/permissions": {
      "get": {
        "tags": [
          "customerGroups/{id}/permissions"
        ],
        "description": "Check if customer group can be deleted.",
        "operationId": "GetV1CustomerGroupsIdPermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customerGroups/{id}/permissions"
      }
    },
    "/V1/customers": {
      "post": {
        "tags": [
          "customers"
        ],
        "description": "Create customer account. Perform necessary business operations like sending email.",
        "operationId": "PostV1Customers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customer"
                ],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "password": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "customer"
                ],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  },
                  "password": {
                    "type": "string"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers"
      }
    },
    "/V1/customers/addresses/{addressId}": {
      "get": {
        "tags": [
          "customers/addresses/{addressId}"
        ],
        "description": "Retrieve customer address.",
        "operationId": "GetV1CustomersAddressesAddressId",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/addresses/{addressId}"
      }
    },
    "/V1/customers/companies": {
      "post": {
        "tags": [
          "customers/companies"
        ],
        "description": "Save customer attributes for company.",
        "operationId": "PostV1CustomersCompanies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "companyAttributes"
                ],
                "properties": {
                  "companyAttributes": {
                    "$ref": "#/components/schemas/company-data-company-customer-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "companyAttributes"
                ],
                "properties": {
                  "companyAttributes": {
                    "$ref": "#/components/schemas/company-data-company-customer-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/companies"
      },
      "get": {
        "tags": [
          "customers/companies"
        ],
        "description": "Returns the list of company customer attributes.",
        "operationId": "GetV1CustomersCompanies",
        "parameters": [
          {
            "name": "criteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "criteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "criteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-customer-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-customer-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/companies"
      }
    },
    "/V1/customers/confirm": {
      "post": {
        "tags": [
          "customers/confirm"
        ],
        "description": "Resend confirmation email.",
        "operationId": "PostV1CustomersConfirm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "websiteId"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "email",
                  "websiteId"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  },
                  "redirectUrl": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/confirm"
      }
    },
    "/V1/customers/isEmailAvailable": {
      "post": {
        "tags": [
          "customers/isEmailAvailable"
        ],
        "description": "Check if given email is associated with a customer account in given website.",
        "operationId": "PostV1CustomersIsEmailAvailable",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customerEmail"
                ],
                "properties": {
                  "customerEmail": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer",
                    "description": "If not set, will use the current websiteId"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "customerEmail"
                ],
                "properties": {
                  "customerEmail": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer",
                    "description": "If not set, will use the current websiteId"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/isEmailAvailable"
      }
    },
    "/V1/customers/me": {
      "put": {
        "tags": [
          "customers/me"
        ],
        "description": "Create or update a customer.",
        "operationId": "PutV1CustomersMe",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMePutv1customersmebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me"
      },
      "get": {
        "tags": [
          "customers/me"
        ],
        "description": "Get customer by Customer ID.",
        "operationId": "GetV1CustomersMe",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me"
      }
    },
    "/V1/customers/me/activate": {
      "put": {
        "tags": [
          "customers/me/activate"
        ],
        "description": "Activate a customer account using a key that was sent in a confirmation email.",
        "operationId": "PutV1CustomersMeActivate",
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMeActivatePutv1customersmeactivatebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/activate"
      }
    },
    "/V1/customers/me/billingAddress": {
      "get": {
        "tags": [
          "customers/me/billingAddress"
        ],
        "description": "Retrieve default billing address for the given customerId.",
        "operationId": "GetV1CustomersMeBillingAddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/billingAddress"
      }
    },
    "/V1/customers/me/password": {
      "put": {
        "tags": [
          "customers/me/password"
        ],
        "description": "Change customer password.",
        "operationId": "PutV1CustomersMePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "currentPassword",
                  "newPassword"
                ],
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/password"
      }
    },
    "/V1/customers/me/shippingAddress": {
      "get": {
        "tags": [
          "customers/me/shippingAddress"
        ],
        "description": "Retrieve default shipping address for the given customerId.",
        "operationId": "GetV1CustomersMeShippingAddress",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/me/shippingAddress"
      }
    },
    "/V1/customers/password": {
      "put": {
        "tags": [
          "customers/password"
        ],
        "description": "Send an email to the customer with a password reset link.",
        "operationId": "PutV1CustomersPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "template"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "template": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "email",
                  "template"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "template": {
                    "type": "string"
                  },
                  "websiteId": {
                    "type": "integer"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/password"
      }
    },
    "/V1/customers/resetPassword": {
      "post": {
        "tags": [
          "customers/resetPassword"
        ],
        "description": "Reset customer password.",
        "operationId": "PostV1CustomersResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "resetToken",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "If empty value given then the customer will be matched by the RP token."
                  },
                  "resetToken": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "email",
                  "resetToken",
                  "newPassword"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "If empty value given then the customer will be matched by the RP token."
                  },
                  "resetToken": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/resetPassword"
      }
    },
    "/V1/customers/search": {
      "get": {
        "tags": [
          "customers/search"
        ],
        "description": "Retrieve customers which match a specified criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://developer.adobe.com/commerce/webapi/rest/attributes#CustomerRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.",
        "operationId": "GetV1CustomersSearch",
        "parameters": [
          {
            "name": "searchCriteria[filterGroups][0][filters][0][field]",
            "in": "query",
            "description": "Field",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][value]",
            "in": "query",
            "description": "Value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[filterGroups][0][filters][0][conditionType]",
            "in": "query",
            "description": "Condition type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][field]",
            "in": "query",
            "description": "Sorting field.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[sortOrders][0][direction]",
            "in": "query",
            "description": "Sorting direction.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteria[pageSize]",
            "in": "query",
            "description": "Page size.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "searchCriteria[currentPage]",
            "in": "query",
            "description": "Current page.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-search-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-search-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/search"
      }
    },
    "/V1/customers/validate": {
      "put": {
        "tags": [
          "customers/validate"
        ],
        "description": "Validate customer data.",
        "operationId": "PutV1CustomersValidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "customer"
                ],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "customer"
                ],
                "properties": {
                  "customer": {
                    "$ref": "#/components/schemas/customer-data-customer-interface"
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-validation-results-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-validation-results-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/validate"
      }
    },
    "/V1/customers/{customerId}": {
      "get": {
        "tags": [
          "customers/{customerId}"
        ],
        "description": "Get customer by Customer ID.",
        "operationId": "GetV1CustomersCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}"
      },
      "put": {
        "tags": [
          "customers/{customerId}"
        ],
        "description": "Create or update a customer.",
        "operationId": "PutV1CustomersCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMePutv1customersmebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}"
      },
      "delete": {
        "tags": [
          "customers/{customerId}"
        ],
        "description": "Delete customer by Customer ID.",
        "operationId": "DeleteV1CustomersCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "true on success"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}"
      }
    },
    "/V1/customers/{customerId}/billingAddress": {
      "get": {
        "tags": [
          "customers/{customerId}/billingAddress"
        ],
        "description": "Retrieve default billing address for the given customerId.",
        "operationId": "GetV1CustomersCustomerIdBillingAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/billingAddress"
      }
    },
    "/V1/customers/{customerId}/carts": {
      "post": {
        "tags": [
          "customers/{customerId}/carts"
        ],
        "description": "Creates an empty cart and quote for a specified customer if customer does not have a cart yet.",
        "operationId": "PostV1CustomersCustomerIdCarts",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "The customer ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "new cart ID if customer did not have a cart or ID of the existing cart otherwise."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/carts"
      }
    },
    "/V1/customers/{customerId}/companies": {
      "get": {
        "tags": [
          "customers/{customerId}/companies"
        ],
        "description": "Returns a list of companies the customer is assigned to",
        "operationId": "GetV1CustomersCustomerIdCompanies",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company-data-company-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/company-data-company-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/companies"
      }
    },
    "/V1/customers/{customerId}/companies/{companyId}": {
      "put": {
        "tags": [
          "customers/{customerId}/companies/{companyId}"
        ],
        "description": "Assigns customer as a company user.",
        "operationId": "PutV1CustomersCustomerIdCompaniesCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/companies/{companyId}"
      },
      "delete": {
        "tags": [
          "customers/{customerId}/companies/{companyId}"
        ],
        "description": "Unassigns customer from the company.",
        "operationId": "DeleteV1CustomersCustomerIdCompaniesCompanyId",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/companies/{companyId}"
      },
      "get": {
        "tags": [
          "customers/{customerId}/companies/{companyId}"
        ],
        "description": "Returns customer attributes for company by ID.",
        "operationId": "GetV1CustomersCustomerIdCompaniesCompanyId",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/company-data-company-customer-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/companies/{companyId}"
      }
    },
    "/V1/customers/{customerId}/confirm": {
      "get": {
        "tags": [
          "customers/{customerId}/confirm"
        ],
        "description": "Gets the account confirmation status.",
        "operationId": "GetV1CustomersCustomerIdConfirm",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/confirm"
      }
    },
    "/V1/customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}": {
      "get": {
        "tags": [
          "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
        ],
        "description": "Check if password reset token is valid.",
        "operationId": "GetV1CustomersCustomerIdPasswordResetLinkTokenResetPasswordLinkToken",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "description": "If null is given then a customer will be matched by the RP token.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "resetPasswordLinkToken",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "True if the token is valid"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean",
                  "description": "True if the token is valid"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/password/resetLinkToken/{resetPasswordLinkToken}"
      }
    },
    "/V1/customers/{customerId}/permissions/readonly": {
      "get": {
        "tags": [
          "customers/{customerId}/permissions/readonly"
        ],
        "description": "Check if customer can be deleted.",
        "operationId": "GetV1CustomersCustomerIdPermissionsReadonly",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/permissions/readonly"
      }
    },
    "/V1/customers/{customerId}/shippingAddress": {
      "get": {
        "tags": [
          "customers/{customerId}/shippingAddress"
        ],
        "description": "Retrieve default shipping address for the given customerId.",
        "operationId": "GetV1CustomersCustomerIdShippingAddress",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{customerId}/shippingAddress"
      }
    },
    "/V1/customers/{email}/activate": {
      "put": {
        "tags": [
          "customers/{email}/activate"
        ],
        "description": "Activate a customer account using a key that was sent in a confirmation email.",
        "operationId": "PutV1CustomersEmailActivate",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutV1CustomersMeActivatePutv1customersmeactivatebody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "customers/{email}/activate"
      }
    },
    "/V1/guest-carts/{cartId}/billing-address": {
      "get": {
        "tags": [
          "guest-carts/{cartId}/billing-address"
        ],
        "description": "Return the billing address for a specified quote.",
        "operationId": "GetV1GuestcartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/billing-address"
      },
      "post": {
        "tags": [
          "guest-carts/{cartId}/billing-address"
        ],
        "description": "Assign a specified billing address to a specified cart.",
        "operationId": "PostV1GuestcartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "guest-carts/{cartId}/billing-address"
      }
    },
    "/V1/integration/customer/revoke-customer-token": {
      "post": {
        "tags": [
          "integration/customer/revoke-customer-token"
        ],
        "description": "Revoke token by customer id.",
        "operationId": "PostV1IntegrationCustomerRevokecustomertoken",
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "integration/customer/revoke-customer-token"
      }
    },
    "/V1/integration/customer/token": {
      "post": {
        "tags": [
          "integration/customer/token"
        ],
        "description": "Create access token for admin given the customer credentials.",
        "operationId": "PostV1IntegrationCustomerToken",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1IntegrationAdminTokenPostv1integrationadmintokenbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Token created"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "Token created"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "integration/customer/token"
      }
    },
    "/V1/inventory/get-latlng-from-address": {
      "get": {
        "tags": [
          "inventory/get-latlng-from-address"
        ],
        "description": "Get latitude and longitude object from address",
        "operationId": "GetV1InventoryGetlatlngfromaddress",
        "parameters": [
          {
            "name": "address[country]",
            "in": "query",
            "description": "Shipping country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[postcode]",
            "in": "query",
            "description": "Shipping postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[street]",
            "in": "query",
            "description": "Shipping street address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[region]",
            "in": "query",
            "description": "Shipping region",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[city]",
            "in": "query",
            "description": "Shipping city",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-latlng-from-address"
      }
    },
    "/V1/inventory/get-latslngs-from-address": {
      "get": {
        "tags": [
          "inventory/get-latslngs-from-address"
        ],
        "description": "Get all available latitude and longitude objects from address.",
        "operationId": "GetV1InventoryGetlatslngsfromaddress",
        "parameters": [
          {
            "name": "address[country]",
            "in": "query",
            "description": "Shipping country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[postcode]",
            "in": "query",
            "description": "Shipping postcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[street]",
            "in": "query",
            "description": "Shipping street address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[region]",
            "in": "query",
            "description": "Shipping region",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address[city]",
            "in": "query",
            "description": "Shipping city",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inventory-distance-based-source-selection-api-data-lat-lng-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "inventory/get-latslngs-from-address"
      }
    },
    "/V1/negotiable-carts/{cartId}/billing-address": {
      "get": {
        "tags": [
          "negotiable-carts/{cartId}/billing-address"
        ],
        "description": "Returns the billing address for a specified quote.",
        "operationId": "GetV1NegotiablecartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/billing-address"
      },
      "post": {
        "tags": [
          "negotiable-carts/{cartId}/billing-address"
        ],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1NegotiablecartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/billing-address"
      }
    },
    "/V1/negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": [
          "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
        ],
        "description": "Estimate shipping",
        "operationId": "PostV1NegotiablecartsCartIdEstimateshippingmethodsbyaddressid",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiable-carts/{cartId}/estimate-shipping-methods-by-address-id"
      }
    },
    "/V1/negotiableQuote/submitToCustomer": {
      "post": {
        "tags": [
          "negotiableQuote/submitToCustomer"
        ],
        "description": "Submit the B2B quote to the customer. The quote status for the customer will be changed to 'Updated', and the customer can work with the quote.",
        "operationId": "PostV1NegotiableQuoteSubmitToCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "quoteId"
                ],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            },
            "application/xml": {
              "schema": {
                "required": [
                  "quoteId"
                ],
                "properties": {
                  "quoteId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/negotiable-quote-data-attachment-content-interface"
                    }
                  }
                },
                "type": "object",
                "xml": {
                  "name": "request"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuote/submitToCustomer"
      }
    },
    "/V1/negotiableQuoteTemplate/submitToCustomer": {
      "post": {
        "tags": [
          "negotiableQuoteTemplate/submitToCustomer"
        ],
        "description": "Seller send action",
        "operationId": "PostV1NegotiableQuoteTemplateSubmitToCustomer",
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1NegotiableQuoteTemplateSubmitToCustomerPostv1negotiablequotetemplatesubmittocustomerbody"
        },
        "responses": {
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "negotiableQuoteTemplate/submitToCustomer"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers": {
      "get": {
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers"
        ],
        "description": "Get tier price of product",
        "operationId": "GetV1ProductsSkuGrouppricesCustomerGroupIdTiers",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/catalog-data-product-tier-price-interface"
                  }
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}": {
      "delete": {
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
        ],
        "description": "Remove tier price from product",
        "operationId": "DeleteV1ProductsSkuGrouppricesCustomerGroupIdTiersQty",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "qty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}"
      }
    },
    "/V1/products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}": {
      "post": {
        "tags": [
          "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
        ],
        "description": "Create tier price for product",
        "operationId": "PostV1ProductsSkuGrouppricesCustomerGroupIdTiersQtyPricePrice",
        "parameters": [
          {
            "name": "sku",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerGroupId",
            "in": "path",
            "required": true,
            "description": "'all' can be used to specify 'ALL GROUPS'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "price",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "qty",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "products/{sku}/group-prices/{customerGroupId}/tiers/{qty}/price/{price}"
      }
    },
    "/V1/purchase-order-carts/{cartId}/billing-address": {
      "post": {
        "tags": [
          "purchase-order-carts/{cartId}/billing-address"
        ],
        "description": "Assigns a specified billing address to a specified cart.",
        "operationId": "PostV1PurchaseordercartsCartIdBillingaddress",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              },
              "application/xml": {
                "schema": {
                  "type": "integer",
                  "description": "Address ID."
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/billing-address"
      }
    },
    "/V1/purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id": {
      "post": {
        "tags": [
          "purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id"
        ],
        "description": "Estimate shipping",
        "operationId": "PostV1PurchaseordercartsCartIdEstimateshippingmethodsbyaddressid",
        "parameters": [
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "description": "The shopping cart ID.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PostV1CartsMineEstimateshippingmethodsbyaddressidPostv1cartsmineestimateshippingmethodsbyaddressidbody"
        },
        "responses": {
          "200": {
            "description": "200 Success.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "description": "An array of shipping methods.",
                  "items": {
                    "$ref": "#/components/schemas/quote-data-shipping-method-interface"
                  }
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/error-response"
                }
              }
            }
          }
        },
        "summary": "purchase-order-carts/{cartId}/estimate-shipping-methods-by-address-id"
      }
    }
  },
  "components": {
    "requestBodies": {
      "PostV1CartsMineBillingaddressPostv1cartsminebillingaddressbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "useForShipping": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                },
                "useForShipping": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMineEstimateshippingmethodsPostv1cartsmineestimateshippingmethodsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CartsMinePaymentinformationPostv1cartsminepaymentinformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "paymentMethod"
              ],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "paymentMethod"
              ],
              "properties": {
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1CustomerGroupsPostv1customergroupsbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "group"
              ],
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "group"
              ],
              "properties": {
                "group": {
                  "$ref": "#/components/schemas/customer-data-group-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PutV1CustomersMePutv1customersmebody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "customer"
              ],
              "properties": {
                "customer": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                },
                "passwordHash": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "customer"
              ],
              "properties": {
                "customer": {
                  "$ref": "#/components/schemas/customer-data-customer-interface"
                },
                "passwordHash": {
                  "type": "string"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      },
      "PostV1GuestcartsCartIdPaymentinformationPostv1guestcartscartidpaymentinformationbody": {
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "email",
                "paymentMethod"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "email",
                "paymentMethod"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "paymentMethod": {
                  "$ref": "#/components/schemas/quote-data-payment-interface"
                },
                "billingAddress": {
                  "$ref": "#/components/schemas/quote-data-address-interface"
                }
              },
              "type": "object",
              "xml": {
                "name": "request"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "error-response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "$ref": "#/components/schemas/error-errors"
          },
          "code": {
            "type": "integer",
            "description": "Error code"
          },
          "parameters": {
            "$ref": "#/components/schemas/error-parameters"
          },
          "trace": {
            "type": "string",
            "description": "Stack trace"
          }
        },
        "required": [
          "message"
        ]
      },
      "customer-data-group-interface": {
        "type": "object",
        "description": "Customer group interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "code": {
            "type": "string",
            "description": "Code"
          },
          "tax_class_id": {
            "type": "integer",
            "description": "Tax class id"
          },
          "tax_class_name": {
            "type": "string",
            "description": "Tax class name"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-group-extension-interface"
          }
        },
        "required": [
          "code",
          "tax_class_id"
        ]
      },
      "customer-data-group-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\GroupInterface",
        "properties": {
          "exclude_website_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "customer-data-group-search-results-interface": {
        "type": "object",
        "description": "Interface for customer groups search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Customer groups list.",
            "items": {
              "$ref": "#/components/schemas/customer-data-group-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "customer-data-attribute-metadata-interface": {
        "type": "object",
        "description": "Customer attribute metadata interface.",
        "properties": {
          "frontend_input": {
            "type": "string",
            "description": "HTML for input element."
          },
          "input_filter": {
            "type": "string",
            "description": "Template used for input (e.g. \"date\")"
          },
          "store_label": {
            "type": "string",
            "description": "Label of the store."
          },
          "validation_rules": {
            "type": "array",
            "description": "Validation rules.",
            "items": {
              "$ref": "#/components/schemas/customer-data-validation-rule-interface"
            }
          },
          "multiline_count": {
            "type": "integer",
            "description": "Of lines of the attribute value."
          },
          "visible": {
            "type": "boolean",
            "description": "Attribute is visible on frontend."
          },
          "required": {
            "type": "boolean",
            "description": "Attribute is required."
          },
          "data_model": {
            "type": "string",
            "description": "Data model for attribute."
          },
          "options": {
            "type": "array",
            "description": "Options of the attribute (key => value pairs for select)",
            "items": {
              "$ref": "#/components/schemas/customer-data-option-interface"
            }
          },
          "frontend_class": {
            "type": "string",
            "description": "Class which is used to display the attribute on frontend."
          },
          "user_defined": {
            "type": "boolean",
            "description": "Current attribute has been defined by a user."
          },
          "sort_order": {
            "type": "integer",
            "description": "Attributes sort order."
          },
          "frontend_label": {
            "type": "string",
            "description": "Label which supposed to be displayed on frontend."
          },
          "note": {
            "type": "string",
            "description": "The note attribute for the element."
          },
          "system": {
            "type": "boolean",
            "description": "This is a system attribute."
          },
          "backend_type": {
            "type": "string",
            "description": "Backend type."
          },
          "is_used_in_grid": {
            "type": "boolean",
            "description": "It is used in customer grid"
          },
          "is_visible_in_grid": {
            "type": "boolean",
            "description": "It is visible in customer grid"
          },
          "is_filterable_in_grid": {
            "type": "boolean",
            "description": "It is filterable in customer grid"
          },
          "is_searchable_in_grid": {
            "type": "boolean",
            "description": "It is searchable in customer grid"
          },
          "attribute_code": {
            "type": "string",
            "description": "Code of the attribute."
          }
        },
        "required": [
          "frontend_input",
          "input_filter",
          "store_label",
          "validation_rules",
          "multiline_count",
          "visible",
          "required",
          "data_model",
          "options",
          "frontend_class",
          "user_defined",
          "sort_order",
          "frontend_label",
          "note",
          "system",
          "backend_type",
          "attribute_code"
        ]
      },
      "customer-data-validation-rule-interface": {
        "type": "object",
        "description": "Validation rule interface.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Validation rule name"
          },
          "value": {
            "type": "string",
            "description": "Validation rule value"
          }
        },
        "required": [
          "name",
          "value"
        ]
      },
      "customer-data-option-interface": {
        "type": "object",
        "description": "Option interface.",
        "properties": {
          "label": {
            "type": "string",
            "description": "Option label"
          },
          "value": {
            "type": "string",
            "description": "Option value"
          },
          "options": {
            "type": "array",
            "description": "Nested options",
            "items": {
              "$ref": "#/components/schemas/customer-data-option-interface"
            }
          }
        },
        "required": [
          "label"
        ]
      },
      "customer-data-customer-interface": {
        "type": "object",
        "description": "Customer entity interface for API handling.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Customer id"
          },
          "group_id": {
            "type": "integer",
            "description": "Group id"
          },
          "default_billing": {
            "type": "string",
            "description": "Default billing address id"
          },
          "default_shipping": {
            "type": "string",
            "description": "Default shipping address id"
          },
          "confirmation": {
            "type": "string",
            "description": "Confirmation"
          },
          "created_at": {
            "type": "string",
            "description": "Created at time"
          },
          "updated_at": {
            "type": "string",
            "description": "Updated at time"
          },
          "created_in": {
            "type": "string",
            "description": "Created in area"
          },
          "dob": {
            "type": "string",
            "description": "In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers’ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data."
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "firstname": {
            "type": "string",
            "description": "First name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "middlename": {
            "type": "string",
            "description": "Middle name"
          },
          "prefix": {
            "type": "string",
            "description": "Prefix"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "gender": {
            "type": "integer",
            "description": "Gender"
          },
          "store_id": {
            "type": "integer",
            "description": "Store id"
          },
          "taxvat": {
            "type": "string",
            "description": "Tax Vat"
          },
          "website_id": {
            "type": "integer",
            "description": "Website id"
          },
          "addresses": {
            "type": "array",
            "description": "Customer addresses.",
            "items": {
              "$ref": "#/components/schemas/customer-data-address-interface"
            }
          },
          "disable_auto_group_change": {
            "type": "integer",
            "description": "Disable auto group change flag."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-customer-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "email",
          "firstname",
          "lastname"
        ]
      },
      "customer-data-address-interface": {
        "type": "object",
        "description": "Customer address interface.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID"
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID"
          },
          "region": {
            "$ref": "#/components/schemas/customer-data-region-interface"
          },
          "region_id": {
            "type": "integer",
            "description": "Region ID"
          },
          "country_id": {
            "type": "string",
            "description": "Country code in ISO_3166-2 format"
          },
          "street": {
            "type": "array",
            "description": "Street",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "type": "string",
            "description": "Company"
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "firstname": {
            "type": "string",
            "description": "First name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "middlename": {
            "type": "string",
            "description": "Middle name"
          },
          "prefix": {
            "type": "string",
            "description": "Prefix"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "vat_id": {
            "type": "string",
            "description": "Vat id"
          },
          "default_shipping": {
            "type": "boolean",
            "description": "If this address is default shipping address."
          },
          "default_billing": {
            "type": "boolean",
            "description": "If this address is default billing address"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-address-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        }
      },
      "customer-data-region-interface": {
        "type": "object",
        "description": "Customer address region interface.",
        "properties": {
          "region_code": {
            "type": "string",
            "description": "Region code"
          },
          "region": {
            "type": "string",
            "description": "Region"
          },
          "region_id": {
            "type": "integer",
            "description": "Region id"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/customer-data-region-extension-interface"
          }
        },
        "required": [
          "region_code",
          "region",
          "region_id"
        ]
      },
      "customer-data-region-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\RegionInterface"
      },
      "customer-data-address-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\AddressInterface"
      },
      "customer-data-customer-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface",
        "properties": {
          "company_attributes": {
            "$ref": "#/components/schemas/company-data-company-customer-interface"
          },
          "is_subscribed": {
            "type": "boolean"
          },
          "assistance_allowed": {
            "type": "integer"
          }
        }
      },
      "company-data-company-customer-interface": {
        "type": "object",
        "description": "Extended customer custom attributes interface.",
        "properties": {
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "company_id": {
            "type": "integer",
            "description": "Company ID."
          },
          "job_title": {
            "type": "string",
            "description": "Job title."
          },
          "status": {
            "type": "integer",
            "description": "Customer status."
          },
          "telephone": {
            "type": "string",
            "description": "Telephone."
          },
          "is_default": {
            "type": "boolean",
            "description": "Is default"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/company-data-company-customer-extension-interface"
          }
        }
      },
      "company-data-company-customer-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface"
      },
      "customer-data-customer-search-results-interface": {
        "type": "object",
        "description": "Interface for customer search results.",
        "properties": {
          "items": {
            "type": "array",
            "description": "Customers list.",
            "items": {
              "$ref": "#/components/schemas/customer-data-customer-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "customer-data-validation-results-interface": {
        "type": "object",
        "description": "Validation results interface.",
        "properties": {
          "valid": {
            "type": "boolean",
            "description": "If the provided data is valid."
          },
          "messages": {
            "type": "array",
            "description": "Error messages as array in case of validation failure, else return empty array.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "valid",
          "messages"
        ]
      },
      "quote-data-address-interface": {
        "type": "object",
        "description": "Interface AddressInterface",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id"
          },
          "region": {
            "type": "string",
            "description": "Region name"
          },
          "region_id": {
            "type": "integer",
            "description": "Region id"
          },
          "region_code": {
            "type": "string",
            "description": "Region code"
          },
          "country_id": {
            "type": "string",
            "description": "Country id"
          },
          "street": {
            "type": "array",
            "description": "Street",
            "items": {
              "type": "string"
            }
          },
          "company": {
            "type": "string",
            "description": "Company"
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "postcode": {
            "type": "string",
            "description": "Postcode"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "firstname": {
            "type": "string",
            "description": "First name"
          },
          "lastname": {
            "type": "string",
            "description": "Last name"
          },
          "middlename": {
            "type": "string",
            "description": "Middle name"
          },
          "prefix": {
            "type": "string",
            "description": "Prefix"
          },
          "suffix": {
            "type": "string",
            "description": "Suffix"
          },
          "vat_id": {
            "type": "string",
            "description": "Vat id"
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer id"
          },
          "email": {
            "type": "string",
            "description": "Billing/shipping email"
          },
          "same_as_billing": {
            "type": "integer",
            "description": "Same as billing flag"
          },
          "customer_address_id": {
            "type": "integer",
            "description": "Customer address id"
          },
          "save_in_address_book": {
            "type": "integer",
            "description": "Save in address book flag"
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/quote-data-address-extension-interface"
          },
          "custom_attributes": {
            "type": "array",
            "description": "Custom attributes values.",
            "items": {
              "$ref": "#/components/schemas/framework-attribute-interface"
            }
          }
        },
        "required": [
          "region",
          "region_id",
          "region_code",
          "country_id",
          "street",
          "telephone",
          "postcode",
          "city",
          "firstname",
          "lastname",
          "email"
        ]
      },
      "quote-data-address-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\AddressInterface",
        "properties": {
          "discounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/sales-rule-data-rule-discount-interface"
            }
          },
          "gift_registry_id": {
            "type": "integer"
          },
          "pickup_location_code": {
            "type": "string"
          }
        }
      },
      "sales-data-order-address-interface": {
        "type": "object",
        "description": "Order address interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.",
        "properties": {
          "address_type": {
            "type": "string",
            "description": "Address type."
          },
          "city": {
            "type": "string",
            "description": "City."
          },
          "company": {
            "type": "string",
            "description": "Company."
          },
          "country_id": {
            "type": "string",
            "description": "Country ID."
          },
          "customer_address_id": {
            "type": "integer",
            "description": "Country address ID."
          },
          "customer_id": {
            "type": "integer",
            "description": "Customer ID."
          },
          "email": {
            "type": "string",
            "description": "Email address."
          },
          "entity_id": {
            "type": "integer",
            "description": "Order address ID."
          },
          "fax": {
            "type": "string",
            "description": "Fax number."
          },
          "firstname": {
            "type": "string",
            "description": "First name."
          },
          "lastname": {
            "type": "string",
            "description": "Last name."
          },
          "middlename": {
            "type": "string",
            "description": "Middle name."
          },
          "parent_id": {
            "type": "integer",
            "description": "Parent ID."
          },
          "postcode": {
            "type": "string",
            "description": "Postal code."
          },
          "prefix": {
            "type": "string",
            "description": "Prefix."
          },
          "region": {
            "type": "string",
            "description": "Region."
          },
          "region_code": {
            "type": "string",
            "description": "Region code."
          },
          "region_id": {
            "type": "integer",
            "description": "Region ID."
          },
          "street": {
            "type": "array",
            "description": "Array of any street values. Otherwise, null.",
            "items": {
              "type": "string"
            }
          },
          "suffix": {
            "type": "string",
            "description": "Suffix."
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number."
          },
          "vat_id": {
            "type": "string",
            "description": "VAT ID."
          },
          "vat_is_valid": {
            "type": "integer",
            "description": "VAT-is-valid flag value."
          },
          "vat_request_date": {
            "type": "string",
            "description": "VAT request date."
          },
          "vat_request_id": {
            "type": "string",
            "description": "VAT request ID."
          },
          "vat_request_success": {
            "type": "integer",
            "description": "VAT-request-success flag value."
          },
          "extension_attributes": {
            "$ref": "#/components/schemas/sales-data-order-address-extension-interface"
          }
        },
        "required": [
          "address_type",
          "city",
          "country_id",
          "firstname",
          "lastname",
          "postcode",
          "telephone"
        ]
      },
      "sales-data-order-address-extension-interface": {
        "type": "object",
        "description": "ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\OrderAddressInterface"
      },
      "company-data-company-customer-search-results-interface": {
        "type": "object",
        "description": "Interface for company customer attributes search results",
        "properties": {
          "items": {
            "type": "array",
            "description": "Company customer attributes list",
            "items": {
              "$ref": "#/components/schemas/company-data-company-customer-interface"
            }
          },
          "search_criteria": {
            "$ref": "#/components/schemas/framework-search-criteria-interface"
          },
          "total_count": {
            "type": "integer",
            "description": "Total count."
          }
        },
        "required": [
          "items",
          "search_criteria",
          "total_count"
        ]
      },
      "inventory-distance-based-source-selection-api-data-lat-lng-interface": {
        "type": "object",
        "description": "DTO for latitude and longitude request",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude"
          },
          "lng": {
            "type": "number",
            "description": "Longitude"
          }
        },
        "required": [
          "lat",
          "lng"
        ]
      },
      "inventory-source-selection-api-data-address-interface": {
        "type": "object",
        "description": "Data interface for shipping source or shipping destination",
        "properties": {
          "country": {
            "type": "string",
            "description": "Shipping country"
          },
          "postcode": {
            "type": "string",
            "description": "Shipping postcode"
          },
          "street": {
            "type": "string",
            "description": "Shipping street address"
          },
          "region": {
            "type": "string",
            "description": "Shipping region"
          },
          "city": {
            "type": "string",
            "description": "Shipping city"
          }
        },
        "required": [
          "country",
          "postcode",
          "street",
          "region",
          "city"
        ]
      }
    }
  }
}